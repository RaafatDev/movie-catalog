{"version":3,"sources":["appState/movieReducer.tsx","ScrollTop.tsx","components/navbar/Suggestion.tsx","model/genre.ts","urls_and_keys.ts","hooks/usePrepareMoviesArr.ts","hooks/useDebouncedSearch.ts","components/navbar/MainNav.tsx","appState/movieActions.ts","components/movies-list/Movie.tsx","hooks/useFetch.ts","components/movies-list/MoviesList.tsx","components/slider/Slide.tsx","components/slider/MainSlider.tsx","components/Home.tsx","components/About.tsx","hooks/useLocalStorage.ts","components/SearchResults.tsx","hooks/useCombineFetch.ts","components/movie-details/Credits.tsx","components/movie-details/MovieImages.tsx","components/movie-details/ImagesSlide.tsx","components/movie-details/MovieVideos.tsx","components/movie-details/BasicDetails.tsx","components/movie-details/MovieDetails.tsx","hooks/useURL.ts","components/ViewAll.tsx","components/NotFound.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["initialState","loading","movieArr","tvShowArr","error","movieReducer","state","action","type","payload","withRouter","history","useEffect","unListen","listen","window","scrollTo","Suggestion","movie","className","key","index","src","poster_path","to","pathname","id","title","split","join","JSON","stringify","release_date","Genres","movieGenres","name","basePosterUrl","dbKey","popular_url","popular_tv_url","usePrepareMoviesArr","rowArr","useState","sortedArr","setSortedArr","sortData","Arr","length","results","map","genre_ids","movie_genre","number","find","genreObject","movieArrTwo","isMovie","first_air_date","process","backdrop_path","overview","push","useDebouncedSearch","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","searchTerm","a","async","search_url","fetch","response","json","data","searchMovie","then","MainNav","setSearchTerm","showSuggestions","setShowSuggestions","searchRef","React","useRef","handleClick","e","clickedElement","target","clickedButton","closest","clickedSearchBox","clickedSuggestions","current","addEventListener","removeEventListener","data-toggle","data-target","aria-controls","aria-expanded","aria-label","ref","onChange","placeholder","onClick","slice","searchedMovies","keyword","movieRequestFailure","Movie","oneMovie","alt","useFetch","url","setData","setError","isLoading","setIsLoading","fetchData","MoviesList","useContext","MoviesContext","dispatch","dataArr","tvDataArr","sortedTvShowsArr","sortedMoviesArr","x","Slid","MainSlider","slidesToShow","slidesToScroll","dots","infinite","initialSlide","autoplay","arrows","autoplaySpeed","pauseOnHover","Home","About","style","height","width","useLocalStorage","defaultValue","parse","localStorage","getItem","setState","console","log","setItem","SearchResults","useHistory","setMovieArr","localState","setLocalState","removeItem","movieArrParsed","location","useCombineFetch","tmdb_url","combined","imdb_id","cast","credits","budget","videos","images","backdrops","posters","external_ids","omdb_url","json2","Actors","fetchBoth","Credits","actors","member","imgSrc","profile_path","character","MovieImages","image","openOverlay","file_path","ImagesSlide","imageSrc","setImageSrc","showOverlay","setShowOverlay","overlayRef","event","currentTarget","responsive","breakpoint","settings","centerMode","swipeToSlide","aria-hidden","MovieVideos","video","videoSrc","iframeRef","modalRef","stopVideo","toString","tabIndex","role","aria-labelledby","data-dismiss","allowFullScreen","BasicDetails","combinedFetch","Genre","Director","Writer","Country","Awards","Ratings","imdbRating","Production","RottenTomato","Rat","Source","Value","Intl","NumberFormat","format","MovieDetails","movieId","trailers","storageValue","setStorageValue","data-parent","Object","keys","ViewAll","NotFound","createContext","App","useReducer","Provider","basename","exact","path","component","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ec086d0a.chunk.js","sourcesContent":["import { Actions } from \"./movieActions\";\r\n\r\nexport const initialState = {\r\n  loading: false,\r\n  movieArr: [],\r\n  tvShowArr: [],\r\n  error: \"\"\r\n};\r\n\r\nexport type State = {\r\n  loading: boolean;\r\n  movieArr: any[];\r\n  tvShowArr: any[];\r\n  error: string;\r\n};\r\n// export type Actions = MOVIE_REQUEST | fetch | MOVIE_REQUEST_FAILURE | any;\r\nexport const movieReducer = (\r\n  state: State = initialState,\r\n  action: Actions\r\n): State => {\r\n  switch (action.type) {\r\n    case \"MovieRequestSend\":\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n\r\n    case \"TvShowRequestSuccess\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        tvShowArr: action.payload\r\n      };\r\n\r\n    case \"MovieRequestSuccess\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        movieArr: action.payload\r\n      };\r\n\r\n    case \"MovieRequestFailure\":\r\n      return {\r\n        // ...state,\r\n        loading: false,\r\n        movieArr: [],\r\n        tvShowArr: [],\r\n        // error: action.payload\r\n        error: \"something went wrong! \"\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// type MOVIE_REQUEST = {\r\n//   type: \"MOVIE_REQUEST\";\r\n// };\r\n\r\n// type fetch = {\r\n//   type?: \"MOVIE_REQUEST_SUCCESS\";\r\n//   payload?: [];\r\n// };\r\n\r\n// type MOVIE_REQUEST_FAILURE = {\r\n//   type?: \"MOVIE_REQUEST_FAILURE\";\r\n//   payload?: \"\";\r\n// };\r\n","import { useEffect } from \"react\";\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\n\r\ninterface Props extends RouteComponentProps<{ id: string }> {}\r\n// console.log(\"Scroll to top !!!\");\r\n\r\nconst ScrollToTop: React.FC<Props> = ({ history }) => {\r\n  useEffect(() => {\r\n    // console.log(\"use Effect ini Scroll to top !!!\");\r\n\r\n    const unListen = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unListen();\r\n    };\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  movie: any;\r\n}\r\n\r\nconst Suggestion: React.FC<Props> = ({ movie }) => {\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"suggestions__item d-flex border bg-white\"\r\n        key={movie.index}\r\n      >\r\n        <img src={movie.poster_path} className=\"suggestions__item__image\" />\r\n\r\n        <div className=\"suggestions__item__info pl-2\">\r\n          <Link\r\n            to={{\r\n              pathname: `/movie/${movie.id}/${movie.title\r\n                .split(\" \")\r\n                .join(\"-\")}`,\r\n              state: {\r\n                movie: JSON.stringify(movie)\r\n              }\r\n            }}\r\n          >\r\n            <p className=\"suggestions__item__info__title m-0  font-weight-bold\">\r\n              {movie.title}\r\n            </p>\r\n          </Link>\r\n          <p className=\"suggestions__item__info__year m-0 text-muted\">\r\n            Release: {movie.release_date}\r\n          </p>\r\n          <p className=\"suggestions__item__info__genres m-0 text-muted\">\r\n            {movie.Genres}{\" \"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Suggestion;\r\n","export const movieGenres = [\r\n  {\r\n    id: 28,\r\n    name: \"Action\"\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"Adventure\"\r\n  },\r\n  {\r\n    id: 16,\r\n    name: \"Animation\"\r\n  },\r\n  {\r\n    id: 35,\r\n    name: \"Comedy\"\r\n  },\r\n  {\r\n    id: 80,\r\n    name: \"Crime\"\r\n  },\r\n  {\r\n    id: 99,\r\n    name: \"Documentary\"\r\n  },\r\n  {\r\n    id: 18,\r\n    name: \"Drama\"\r\n  },\r\n  {\r\n    id: 10751,\r\n    name: \"Family\"\r\n  },\r\n  {\r\n    id: 14,\r\n    name: \"Fantasy\"\r\n  },\r\n  {\r\n    id: 36,\r\n    name: \"History\"\r\n  },\r\n  {\r\n    id: 27,\r\n    name: \"Horror\"\r\n  },\r\n  {\r\n    id: 10402,\r\n    name: \"Music\"\r\n  },\r\n  {\r\n    id: 9648,\r\n    name: \"Mystery\"\r\n  },\r\n  {\r\n    id: 10749,\r\n    name: \"Romance\"\r\n  },\r\n  {\r\n    id: 878,\r\n    name: \"Science Fiction\"\r\n  },\r\n  {\r\n    id: 10770,\r\n    name: \"TV Movie\"\r\n  },\r\n  {\r\n    id: 53,\r\n    name: \"Thriller\"\r\n  },\r\n  {\r\n    id: 10752,\r\n    name: \"War\"\r\n  },\r\n  {\r\n    id: 37,\r\n    name: \"Western\"\r\n  }\r\n];\r\n\r\nexport const tvGenres = [\r\n  {\r\n    id: 10759,\r\n    name: \"Action & Adventure\"\r\n  },\r\n  {\r\n    id: 16,\r\n    name: \"Animation\"\r\n  },\r\n  {\r\n    id: 35,\r\n    name: \"Comedy\"\r\n  },\r\n  {\r\n    id: 80,\r\n    name: \"Crime\"\r\n  },\r\n  {\r\n    id: 99,\r\n    name: \"Documentary\"\r\n  },\r\n  {\r\n    id: 18,\r\n    name: \"Drama\"\r\n  },\r\n  {\r\n    id: 10751,\r\n    name: \"Family\"\r\n  },\r\n  {\r\n    id: 10762,\r\n    name: \"Kids\"\r\n  },\r\n  {\r\n    id: 9648,\r\n    name: \"Mystery\"\r\n  },\r\n  {\r\n    id: 10763,\r\n    name: \"News\"\r\n  },\r\n  {\r\n    id: 10764,\r\n    name: \"Reality\"\r\n  },\r\n  {\r\n    id: 10765,\r\n    name: \"Sci-Fi & Fantasy\"\r\n  },\r\n  {\r\n    id: 10766,\r\n    name: \"Soap\"\r\n  },\r\n  {\r\n    id: 10767,\r\n    name: \"Talk\"\r\n  },\r\n  {\r\n    id: 10768,\r\n    name: \"War & Politics\"\r\n  },\r\n  {\r\n    id: 37,\r\n    name: \"Western\"\r\n  }\r\n];\r\n","// export const imgBaseUrl = \"https://image.tmdb.org/t/p/w1280/\";\r\nexport const basePosterUrl = `https://image.tmdb.org/t/p/`;\r\nexport const baseActorFaceUrl = `https://image.tmdb.org/t/p/w66_and_h66_face/`;\r\nexport const youtubeBseUrl = `https://www.youtube.com/watch?v=`;\r\nexport const dbKey = \"0243c3f17573e5ce67e3c565fa006544\";\r\n// let popular_url = `https://api.themoviedb.org/3/movie/popular?api_key=${dbKey}&language=en-US&page=1`;\r\nexport let popular_url = `https://api.themoviedb.org/3/movie/popular?api_key=${dbKey}&language=en-US&page=1`;\r\n// export let popular_tv_url = `https://api.themoviedb.org/3/tv/popular?api_key=${dbKey}&language=en-US&page=1`;\r\nexport let popular_tv_url = `https://api.themoviedb.org/3/tv/popular?api_key=${dbKey}&language=en-US&page=1&append_to_response=external_ids`;\r\nexport let tv_external_id = `http://api.themoviedb.org/3/tv/500?api_key=${dbKey}&append_to_response=external_ids`;\r\n\r\nconst apiKey = \"3ff4ea5b\";\r\n// const dbKey = \"0243c3f17573e5ce67e3c565fa006544\";\r\n// let basePosterUrl = `https://image.tmdb.org/t/p/`;\r\n\r\n// before: before the imdb_id\r\n// after: after the imdb_id\r\nexport const tv_tmdb_url_before = `https://api.themoviedb.org/3/tv/`;\r\n// export const tv_tmdb_url_after = `?api_key=0243c3f17573e5ce67e3c565fa006544&language=en-US&append_to_response=videos`;\r\n// export const tv_tmdb_url_after = `?api_key=0243c3f17573e5ce67e3c565fa006544&language=en-US&append_to_response=videos,external_ids`;\r\n// export const tv_tmdb_url_after = `?api_key=0243c3f17573e5ce67e3c565fa006544&language=en-US&append_to_response=videos,external_ids,recommendations&include_image_language=en,null`;\r\nexport const tv_tmdb_url_after = `?api_key=0243c3f17573e5ce67e3c565fa006544&append_to_response=videos,images&include_image_language=en,null`;\r\n\r\n// !!!!!!!!\r\n// export const experimental = `https://api.themoviedb.org/3/movie/550?api_key=${dbKey}&language=en-US&append_to_response=images&include_image_language=en,null`;\r\n// export const experimental = `https://api.themoviedb.org/3/movie/60625?api_key=${dbKey}&language=en-US&append_to_response=images&include_image_language=en,null`;\r\nexport const experimental = `https://api.themoviedb.org/3/tv/85949/images?api_key=${dbKey}&language=en-US&include_image_language=en,null`;\r\n\r\nexport const tmdb_url_before = `https://api.themoviedb.org/3/movie/`;\r\n// export const tmdb_url_after = `?api_key=0243c3f17573e5ce67e3c565fa006544&append_to_response=videos,images,credits&include_image_language=en,null`;\r\nexport const tmdb_url_after = `?api_key=0243c3f17573e5ce67e3c565fa006544&append_to_response=videos,images,credits,external_ids&include_image_language=en,null`;\r\n\r\n/*\r\nexport const tv_tmdb_url = `https://api.themoviedb.org/3/tv/${id}?api_key=${dbKey}&language=en-US&append_to_response=videos`;\r\n\r\nget the {imdb_id , youtube trailer id } from the TMDB API to use it in the omdb api\r\nconst tmdb_url = `https://api.themoviedb.org/3/movie/${id}?api_key=${dbKey}&append_to_response=videos`;\r\nexport const tmdb_url = `https://api.themoviedb.org/3/movie/${id}?api_key=${dbKey}&append_to_response=videos,images&include_image_language=en,null`;\r\n*/\r\n// const apiKey = \"3ff4ea5b\";\r\n// !\r\n// const omdb_url = `https://www.omdbapi.com/?apikey=${apiKey}&i=${tmdb_data.imdb_id}&plot=full`;\r\nexport const omdb_url_before = `https://www.omdbapi.com/?apikey=${apiKey}&i=`;\r\nexport const omdb_url_after = `&plot=full`;\r\n\r\n/*\r\n\r\nconst movieInfo = {\r\n      imdb_id: tmdb_data.imdb_id,\r\n      Title: tmdb_data.title ? tmdb_data.title : tmdb_data.name,\r\n      ReleaseDate: tmdb_data.release_date\r\n        ? tmdb_data.release_date\r\n        : tmdb_data.first_air_date,\r\n      // imdbID: tmdb_data.id,\r\n      MovieID: JSON.stringify(tmdb_data.id),\r\n      Poster: `${basePosterUrl}w1280${tmdb_data.poster_path}`,\r\n      BigPoster: `${basePosterUrl}w1280${tmdb_data.backdrop_path}`,\r\n      Plot: tmdb_data.overview,\r\n      // Genre: tmdb_data.genres,\r\n      Videos: tmdb_data.videos,\r\n      // Genres: movie_genre\r\n      // ########################3\r\n      Actors: omdb_data.Actors,\r\n      Country: omdb_data.Country,\r\n      Director: omdb_data.Director,\r\n      Genre: omdb_data.Genre,\r\n      Language: omdb_data.Language,\r\n      Production: omdb_data.Production,\r\n      Ratings: omdb_data.Ratings,\r\n      Runtime: omdb_data.Runtime,\r\n      Year: omdb_data.Year,\r\n      imdbRating: omdb_data.imdbRating,\r\n      Awards: omdb_data.Awards,\r\n      Images: tmdb_data.images.backdrops\r\n    };\r\n\r\n\r\n*/\r\n","import { useState, useEffect } from \"react\";\r\nimport { movieGenres } from \"../model/genre\";\r\nimport { PopularMovie } from \"../model/PopularMovie\";\r\nimport { basePosterUrl } from \"../urls_and_keys\";\r\n\r\nconst usePrepareMoviesArr = (rowArr: any) => {\r\n  //\r\n  const [sortedArr, setSortedArr] = useState<any>([]);\r\n\r\n  const sortData = (rowArr: any) => {\r\n    let Arr: any[] = [];\r\n\r\n    if (!rowArr) return;\r\n\r\n    if (rowArr.length === 0) return;\r\n\r\n    rowArr.results.map((movie: PopularMovie) => {\r\n      if (!movie.genre_ids) return;\r\n      const movie_genre = movie.genre_ids\r\n        .map((number: any) => {\r\n          return movieGenres.find(genreObject => {\r\n            return genreObject.id === number;\r\n          })?.name;\r\n        })\r\n        .join(\", \");\r\n\r\n      const movieArrTwo = {\r\n        isMovie: movie.title ? true : false,\r\n        title: movie.title ? movie.title : movie.name,\r\n        release_date: movie.release_date\r\n          ? movie.release_date\r\n          : movie.first_air_date,\r\n        // imdbID: movie.id,\r\n        id: JSON.stringify(movie.id),\r\n        poster_path: movie.poster_path\r\n          ? // ? `${basePosterUrl}w1280${movie.poster_path}`\r\n            `${basePosterUrl}w300${movie.poster_path}`\r\n          : `${process.env.PUBLIC_URL}/img/no_image.png`,\r\n        backdrop_path: movie.backdrop_path\r\n          ? // ? `${basePosterUrl}w1280${movie.backdrop_path}`\r\n            `${basePosterUrl}w780${movie.backdrop_path}`\r\n          : `${process.env.PUBLIC_URL}/img/no_image.png`,\r\n        overview: movie.overview,\r\n        genre_ids: movie.genre_ids,\r\n        Genres: movie_genre\r\n      };\r\n      Arr.push(movieArrTwo);\r\n    });\r\n\r\n    setSortedArr([...Arr]);\r\n  };\r\n  useEffect(() => {\r\n    sortData(rowArr);\r\n  }, [rowArr]);\r\n\r\n  return [sortedArr, sortData];\r\n};\r\n\r\nexport default usePrepareMoviesArr;\r\n","import { useState, useEffect } from \"react\";\r\nimport usePrepareMoviesArr from \"./usePrepareMoviesArr\";\r\n\r\n// Our hook\r\nexport default function useDebouncedSearch(value: any, delay: number) {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n  const [sortedArr, setSortedArr] = usePrepareMoviesArr([]);\r\n\r\n  const searchMovie = async (searchTerm: string) => {\r\n    const search_url = `https://api.themoviedb.org/3/search/multi?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&query=${searchTerm}&page=1&include_adult=false`;\r\n\r\n    const response = await fetch(search_url);\r\n    const data = await response.json();\r\n\r\n    return data;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n    if (debouncedValue) {\r\n      searchMovie(debouncedValue).then((data: any) => {\r\n        setSortedArr(data);\r\n      });\r\n    } else {\r\n      setSortedArr([]);\r\n    }\r\n    //   }, [value]);\r\n  }, [debouncedValue]);\r\n\r\n  //   return debouncedValue;\r\n  return sortedArr;\r\n}\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Suggestion from \"./Suggestion\";\r\nimport useDebouncedSearch from \"../../hooks/useDebouncedSearch\";\r\n\r\ninterface Props {}\r\n\r\nconst MainNav: React.FC<Props> = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  const searchRef = React.useRef<any>(null);\r\n  const sortedArr = useDebouncedSearch(searchTerm, 500);\r\n\r\n  function handleClick(e: any) {\r\n    const clickedElement = e.target;\r\n\r\n    const clickedButton = clickedElement.closest(\".suggestions__button\");\r\n    const clickedSearchBox = clickedElement.closest(\".search-box\");\r\n    const clickedSuggestions = clickedElement.closest(\".suggestions\");\r\n    const clickedTitle = clickedElement.closest(\r\n      \".suggestions__item__info__title\"\r\n    );\r\n\r\n    if (clickedTitle) {\r\n      setShowSuggestions(false);\r\n      searchRef.current.value = \"\";\r\n\r\n      return;\r\n    }\r\n\r\n    if (clickedButton) {\r\n      setShowSuggestions(false);\r\n      searchRef.current.value = \"\";\r\n    }\r\n\r\n    if (!clickedSearchBox && !clickedSuggestions) {\r\n      setShowSuggestions(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"click\", handleClick);\r\n\r\n    return () => window.removeEventListener(\"click\", handleClick);\r\n  }, []);\r\n\r\n  // %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n\r\n  return (\r\n    <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark\">\r\n      <div className=\"container\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Movie Catalog\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarsExample07\"\r\n          aria-controls=\"navbarsExample07\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarsExample07\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                About <span className=\"sr-only\">(current)</span>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <form className=\"form-inline my-2 my-md-0 search-form form-group\">\r\n            <input\r\n              ref={searchRef}\r\n              onChange={e => {\r\n                e.target.value === \"\"\r\n                  ? setShowSuggestions(false)\r\n                  : setShowSuggestions(true);\r\n\r\n                setSearchTerm(e.target.value);\r\n              }}\r\n              className=\"form-control w-100 search-box\"\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n\r\n            <div\r\n              className=\"suggestions rounded\"\r\n              onClick={() => setShowSuggestions(true)}\r\n            >\r\n              {showSuggestions &&\r\n                sortedArr &&\r\n                sortedArr\r\n                  .slice(0, 5)\r\n                  .map((movie: any, index: number) => (\r\n                    <Suggestion movie={movie} key={index} />\r\n                  ))}\r\n\r\n              {showSuggestions && sortedArr.length !== 0 && (\r\n                <Link\r\n                  to={{\r\n                    // pathname: `/search?keyword=${searchRef.current.value\r\n                    pathname: `/search/keyword=${searchRef.current.value\r\n                      .split(\" \")\r\n                      .join(\"-\")}`,\r\n                    state: {\r\n                      searchedMovies: JSON.stringify(sortedArr),\r\n                      keyword: searchRef.current.value\r\n                    }\r\n                  }}\r\n                >\r\n                  <button className=\"suggestions__button btn btn-primary btn-block border\">\r\n                    View All\r\n                  </button>\r\n                </Link>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default MainNav;\r\n","import { PopularMovie } from \"../model/PopularMovie\";\r\n\r\n// export type MOVIE_REQUEST = {\r\n//   type: \"MOVIE_REQUEST\";\r\n// };\r\n\r\n// export type fetch = {\r\n//   type?: \"MOVIE_REQUEST_SUCCESS\";\r\n//   payload?: [];\r\n// };\r\n\r\n// export type MOVIE_REQUEST_FAILURE = {\r\n//   type?: \"MOVIE_REQUEST_FAILURE\";\r\n//   payload?: \"\";\r\n// };\r\n\r\nexport type MovieRequestSend = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\nexport type TvShowRequestSuccess = {\r\n  type: string;\r\n  payload: PopularMovie[];\r\n};\r\n\r\nexport type MovieRequestSuccess = {\r\n  type: string;\r\n  payload: PopularMovie[];\r\n};\r\n\r\nexport type MovieRequestFailure = {\r\n  type: string;\r\n  payload: string;\r\n};\r\n\r\n// export type Actions = MOVIE_REQUEST | fetch | MOVIE_REQUEST_FAILURE | any;\r\nexport type Actions =\r\n  | MovieRequestSend\r\n  | MovieRequestSuccess\r\n  | TvShowRequestSuccess\r\n  | MovieRequestFailure;\r\n\r\nexport function movieRequestSend() {\r\n  return {\r\n    type: \"MovieRequestSend\"\r\n  };\r\n}\r\n\r\nexport function tvShowRequestSuccess(tvShows: PopularMovie[]) {\r\n  return {\r\n    type: \"TvShowRequestSuccess\",\r\n    payload: tvShows\r\n  };\r\n}\r\n\r\nexport function movieRequestSuccess(movies: PopularMovie[]) {\r\n  return {\r\n    type: \"MovieRequestSuccess\",\r\n    payload: movies\r\n  };\r\n}\r\n\r\nexport function movieRequestFailure(error: any) {\r\n  return {\r\n    type: \"MovieRequestFailure\",\r\n    payload: error\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { PopularMovie } from \"../../model/PopularMovie\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface MovieProps {\r\n  oneMovie: PopularMovie;\r\n}\r\n\r\nconst Movie: React.FC<MovieProps> = ({ oneMovie }) => {\r\n  const { id, poster_path, title, release_date } = oneMovie;\r\n\r\n  return (\r\n    <Link\r\n      to={{\r\n        pathname: `/movie/${id}/${title.split(\" \").join(\"-\")}`,\r\n        state: {\r\n          movie: JSON.stringify(oneMovie)\r\n        }\r\n      }}\r\n    >\r\n      <div className=\"movie-container text-center\">\r\n        <img\r\n          className=\"movie-container__image rounded-lg\"\r\n          src={poster_path}\r\n          alt={title + id}\r\n        />\r\n        <div className=\"movie-container__info p-2\">\r\n          <p className=\"lead mb-0\">{title}</p>\r\n          <p className=\"lead\">({release_date}) </p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport function useFetch(url: string) {\r\n  const [data, setData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await fetch(url);\r\n        const json = await response.json();\r\n\r\n        setData(json);\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  return [data, isLoading, error];\r\n}\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport {\r\n  movieRequestSend,\r\n  movieRequestSuccess,\r\n  movieRequestFailure,\r\n  tvShowRequestSuccess\r\n} from \"../../appState/movieActions\";\r\nimport { MoviesContext } from \"../../App\";\r\nimport { PopularMovie } from \"../../model/PopularMovie\";\r\n\r\nimport Movie from \"./Movie\";\r\n\r\nimport { popular_tv_url, popular_url } from \"../../urls_and_keys\";\r\n\r\nimport usePrepareMoviesArr from \"../../hooks/usePrepareMoviesArr\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\n\r\nconst MoviesList: React.FC = () => {\r\n  //!\r\n  const { state, dispatch } = useContext<any>(MoviesContext);\r\n  const [dataArr, isLoading, error] = useFetch(popular_url);\r\n  const [tvDataArr, tvIsLoading, tvError] = useFetch(popular_tv_url);\r\n  // const [sortedTvShowsArr] = usePrepareMoviesArr(tvDataArr, dispatch);\r\n  const [sortedTvShowsArr] = usePrepareMoviesArr(tvDataArr);\r\n  // const [sortedMoviesArr] = usePrepareMoviesArr(dataArr, dispatch);\r\n  const [sortedMoviesArr] = usePrepareMoviesArr(dataArr);\r\n  useEffect(() => {\r\n    if (isLoading) dispatch(movieRequestSend());\r\n    if (sortedTvShowsArr) dispatch(tvShowRequestSuccess(sortedTvShowsArr));\r\n    if (sortedMoviesArr) dispatch(movieRequestSuccess(sortedMoviesArr));\r\n    if (error) dispatch(movieRequestFailure);\r\n  }, [sortedMoviesArr, sortedTvShowsArr]);\r\n  // console.log({ state });\r\n\r\n  return (\r\n    // <div className=\"container bg-primary p-4 p-md-0 mt-4\">\r\n    // <div className=\"container bg-primary  mt-4\">\r\n    <div className=\"movies-list-container container text-light  mt-4\">\r\n      <h1>Movies</h1>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {state &&\r\n            state.movieArr &&\r\n            state.movieArr.slice(0, 10).map((x: PopularMovie) => (\r\n              <div\r\n                className=\"col m-2 p-0 d-flex justify-content-center align-items-stretch\"\r\n                key={x.id}\r\n              >\r\n                <Movie oneMovie={x} key={x.id} />\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <h1>TV Shows</h1>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {state &&\r\n            state.tvShowArr &&\r\n            state.tvShowArr.slice(0, 10).map((x: PopularMovie) => (\r\n              <div\r\n                className=\"col m-2 p-0 d-flex justify-content-center align-items-stretch\"\r\n                key={x.id}\r\n              >\r\n                <Movie oneMovie={x} key={x.id} />\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesList;\r\n","import React from \"react\";\r\nimport { PopularMovie } from \"../../model/PopularMovie\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface MovieProps {\r\n  oneMovie: PopularMovie;\r\n}\r\nconst Slid: React.FC<MovieProps> = ({ oneMovie }) => {\r\n  const { title, backdrop_path, id, overview, release_date, Genres } = oneMovie;\r\n  return (\r\n    <div className=\"slide-container\">\r\n      <img src={backdrop_path} alt={title} />\r\n      <div className=\"container\">\r\n        <div className=\"slide slide--has-caption slick-slide\">\r\n          <div className=\"slide__caption\">\r\n            <Link\r\n              to={{\r\n                pathname: `/movie/${id}/${title.split(\" \").join(\"-\")}`,\r\n                state: {\r\n                  movie: JSON.stringify(oneMovie)\r\n                }\r\n              }}\r\n            >\r\n              <h1 className=\"slide__caption__title\">{title}</h1>\r\n            </Link>\r\n            <ul className=\"list-inline\">\r\n              <li className=\"slide__caption__release-date list-inline-item\">\r\n                <span>Release date: </span>\r\n                {release_date}\r\n              </li>\r\n              <li className=\"slide__caption__genres list-inline-item\">\r\n                <span>Genres: </span>\r\n                {Genres}\r\n              </li>\r\n            </ul>\r\n            <p className=\"slide__caption__overview d-none d-md-block\">\r\n              {overview}{\" \"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slid;\r\n","import React, { useContext } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport { MoviesContext } from \"../../App\";\r\nimport Slid from \"./Slide\";\r\nimport { PopularMovie } from \"../../model/PopularMovie\";\r\n\r\n// class MainSlider extends React.Component {\r\nconst MainSlider: React.FC = () => {\r\n  // const { state, dispatch } = useContext<any>(MoviesContext);\r\n  const { state } = useContext<any>(MoviesContext);\r\n  // const mainSliderRef = React.useRef<any>(null);\r\n  //! $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$4\r\n\r\n  var settings = {\r\n    // dots: true,\r\n    // infinite: true,\r\n    // speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    dots: true,\r\n    infinite: true,\r\n    // speed: 500,\r\n    initialSlide: 1,\r\n    // slidesToShow: 3,\r\n    // slidesToScroll: 3\r\n    autoplay: true,\r\n    // autoplay: false,\r\n    arrows: false,\r\n    // speed: 2000,\r\n    autoplaySpeed: 5000,\r\n    // autoplaySpeed: 1500\r\n    // cssEase: \"linear\"\r\n    pauseOnHover: false\r\n    // pauseOnHover: true\r\n\r\n    // responsive: [\r\n    //   {\r\n    //     breakpoint: 1024,\r\n    //     settings: {\r\n    //       slidesToShow: 3,\r\n    //       slidesToScroll: 3,\r\n    //       infinite: true,\r\n    //       dots: true\r\n    //     }\r\n    //   },\r\n    //   {\r\n    //     breakpoint: 600,\r\n    //     settings: {\r\n    //       slidesToShow: 2,\r\n    //       slidesToScroll: 2,\r\n    //       initialSlide: 2\r\n    //     }\r\n    //   },\r\n    //   {\r\n    //     breakpoint: 480,\r\n    //     settings: {\r\n    //       slidesToShow: 1,\r\n    //       slidesToScroll: 1\r\n    //     }\r\n    //   }\r\n    // ]\r\n  };\r\n  return (\r\n    <div className=\"main-slider container\">\r\n      <Slider {...settings}>\r\n        {state.movieArr &&\r\n          state.movieArr[0] &&\r\n          state.movieArr[0].poster_path &&\r\n          state.movieArr.map(\r\n            (x: PopularMovie) =>\r\n              x.backdrop_path !== \"/img/no_image.png\" && (\r\n                <Slid oneMovie={x} key={x.id} />\r\n              )\r\n          )}\r\n      </Slider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainSlider;\r\n","// import React, { Suspense } from \"react\";\r\nimport React from \"react\";\r\n\r\nimport MoviesList from \"./movies-list/MoviesList\";\r\nimport MainSlider from \"./slider/MainSlider\";\r\n// const MovieListLazy = React.lazy(() => import(\"./movies-list/MoviesList\"));\r\n\r\ninterface Props {}\r\n\r\nconst Home: React.FC<Props> = () => {\r\n  return (\r\n    // <div className=\"mt-4 pt-3\">\r\n    <div>\r\n      {/* <Suspense\r\n        fallback={\r\n          <div className=\"text-danger bg-light\">\r\n            Looooooooooooding !!!!!!!!!!\r\n          </div>\r\n        }\r\n      > */}\r\n      <MainSlider />\r\n      {/* <MovieListLazy /> */}\r\n      {/* </Suspense> */}\r\n      <MoviesList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\ninterface Props {}\r\n\r\nconst About: React.FC<Props> = () => {\r\n  return (\r\n    <div\r\n      className=\"container-fluid about-container text-center bg-dark font-weight-bold text-light\"\r\n      style={{ height: \"100vh\" }}\r\n    >\r\n      <div className=\"row h-100 border border-light border my-auto\">\r\n        <div className=\"col-12 d-flex flex-column justify-content-center align-items-center\">\r\n          <p style={{ width: \"75%\" }} className=\"about-text\">\r\n            this website is meant to give the user enough information to decide\r\n            whether if a movie is worth watching from the user perspective, by\r\n            providing the user with information related to the movie like the\r\n            (actors, directors, overview, release-date , Ratings ...) and movie\r\n            images and trailers, by using the public APIs from TMDB and OMDB\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { useState, useEffect } from \"react\";\r\n\r\n// interface Props {}\r\n// const useLocalStorage = (key: any, initialValue: any) => {\r\nconst useLocalStorage = (key: any, defaultValue: any) => {\r\n  //   // State to store our value\r\n  //   // Pass initial state function to useState so logic is only executed once\r\n  //   const [storedValue, setStoredValue] = useState(() => {\r\n  //     try {\r\n  //       // Get from local storage by key\r\n  //       const item = window.localStorage.getItem(key);\r\n  //       // Parse stored json or if none return initialValue\r\n  //       return item ? JSON.parse(item) : initialValue;\r\n  //     } catch (error) {\r\n  //       // If error also return initialValue\r\n  //       console.log(error);\r\n  //       return initialValue;\r\n  //     }\r\n  //   });\r\n\r\n  //   // Return a wrapped version of useState's setter function that ...\r\n  //   // ... persists the new value to localStorage.\r\n  //   const setValue = (value: any) => {\r\n  //     try {\r\n  //       // Allow value to be a function so we have same API as useState\r\n  //       const valueToStore =\r\n  //         value instanceof Function ? value(storedValue) : value;\r\n  //       // Save state\r\n  //       setStoredValue(valueToStore);\r\n  //       // Save to local storage\r\n  //       window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n  //     } catch (error) {\r\n  //       // A more advanced implementation would handle the error case\r\n  //       console.log(error);\r\n  //     }\r\n  //   };\r\n\r\n  //   return [storedValue, setValue];\r\n\r\n  const [state, setState] = useState<any>(() => {\r\n    let value;\r\n    try {\r\n      value = JSON.parse(\r\n        window.localStorage.getItem(key) || JSON.stringify(defaultValue)\r\n      );\r\n    } catch (e) {\r\n      value = defaultValue;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"the state in the useEffect in the hook\", state);\r\n\r\n    // window.localStorage.setItem(key, state);\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [state]);\r\n\r\n  return [state, setState];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { RouteComponentProps, useHistory } from \"react-router\";\r\n// import MoviesList from \"./movies-list/MoviesList\";\r\nimport Movie from \"./movies-list/Movie\";\r\nimport { PopularMovie } from \"../model/PopularMovie\";\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\n\r\ninterface Props extends RouteComponentProps {}\r\n\r\nconst SearchResults: React.FC<Props> = () => {\r\n  const history = useHistory<any>();\r\n\r\n  const [movieArr, setMovieArr] = useState([]);\r\n  const [localState, setLocalState] = useLocalStorage(\r\n    \"search-result\",\r\n    JSON.stringify(movieArr)\r\n  );\r\n\r\n  console.log(\"%c localState in the Search Results\", \"color: yellow\", {\r\n    localState\r\n  });\r\n  // console.log({ movieArr });\r\n\r\n  useEffect(() => {\r\n    setLocalState(JSON.stringify(movieArr));\r\n\r\n    return () => localStorage.removeItem(\"search-result\");\r\n  }, [movieArr]);\r\n\r\n  useEffect(() => {\r\n    const movieArrParsed = JSON.parse(history.location.state.searchedMovies);\r\n    if (movieArrParsed) {\r\n      setMovieArr(movieArrParsed);\r\n    }\r\n  }, [history.location.state.searchedMovies]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container text-light mt-5\">\r\n        <h1>Result for: {history.location.state.keyword} </h1>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            {movieArr &&\r\n              movieArr.map((x: PopularMovie) => (\r\n                <div\r\n                  className=\"col  m-2 p-0 d-flex align-items-stretch\"\r\n                  key={x.id}\r\n                >\r\n                  <Movie oneMovie={x} key={x.id} />\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import { useState, useEffect } from \"react\";\r\nimport { ICombined } from \"../model/combined\";\r\n\r\ntype Hook = (tmdb_url: string) => [ICombined, boolean, string | null];\r\n\r\nconst useCombineFetch: Hook = (tmdb_url: string) => {\r\n  //   const [state, setState] = useState();\r\n  const [data, setData] = useState<ICombined>({} as ICombined);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const fetchData = async (url: string) => {\r\n    const response = await fetch(url);\r\n    const json = await response.json();\r\n\r\n    return json;\r\n  };\r\n  const fetchBoth = async () => {\r\n    setIsLoading(true);\r\n    let combined = {};\r\n    try {\r\n      const json = await fetchData(tmdb_url);\r\n\r\n      const tmdb_data = {\r\n        imdb_id: json.imdb_id,\r\n        id: json.id,\r\n        // poster_path: string;\r\n        // backdrop_path: string;\r\n        // overview: string;\r\n        // credits: { cast: any[] };\r\n        cast: json.credits.cast,\r\n        // Actors: string;\r\n        budget: json.budget,\r\n        videos: json.videos.results,\r\n        images: json.images.backdrops,\r\n        posters: json.images.posters\r\n      };\r\n      const imdb_id = json.external_ids.imdb_id;\r\n\r\n      if (imdb_id) {\r\n        const omdb_url = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_OMDB_KEY}&i=${imdb_id}&plot=full`;\r\n\r\n        try {\r\n          const json2 = await fetchData(omdb_url);\r\n\r\n          const omdb_data = {\r\n            Actors: json2.Actors\r\n          };\r\n\r\n          combined = { ...json, ...json2 };\r\n          // combined = { ...tmdb_data, ...omdb_data };\r\n        } catch (error) {}\r\n      }\r\n      // setData(( prevState : any ) => {...prevState,  ...combined });\r\n      setData(combined as ICombined);\r\n    } catch (error) {\r\n      setError(error);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBoth();\r\n  }, [tmdb_url]);\r\n\r\n  return [data, isLoading, error];\r\n};\r\n\r\nexport default useCombineFetch;\r\n","import React from \"react\";\r\n\r\n// import { baseActorFaceUrl } from \"../urls_and_keys\";\r\n\r\ninterface ICast {\r\n  character: string;\r\n  name: string;\r\n  profile_path: string;\r\n}\r\ninterface Props {\r\n  cast: ICast[];\r\n  actors: string;\r\n}\r\n\r\nconst Credits: React.FC<Props> = ({ cast, actors }) => {\r\n  // const cast2 = undefined;\r\n  return (\r\n    <div>\r\n      <div>\r\n        {cast && cast.length === 0 && actors && (\r\n          <>\r\n            <span className=\"h3\">The Cast: </span> {actors}\r\n          </>\r\n        )}\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            {cast.map((member: ICast, index: number) => {\r\n              const imgSrc = member.profile_path\r\n                ? // ? `https://image.tmdb.org/t/p/original${member.profile_path}`\r\n                  // `https://image.tmdb.org/t/p/w92/${member.profile_path}`\r\n                  `https://image.tmdb.org/t/p/w185/${member.profile_path}`\r\n                : `${process.env.PUBLIC_URL}/img/no_image.png`;\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className=\"cast-container clo col-6 col-sm-4 col-md-3 p-0 border d-flex align-items-stretch\"\r\n                >\r\n                  <div className=\"cast text-center\">\r\n                    <div className=\"cast__img-container\">\r\n                      <img src={imgSrc} alt={member.name} />\r\n                    </div>\r\n                    <div className=\"cast__character\">\r\n                      <span className=\"lead\">{member.name} </span>\r\n                      <br />\r\n                      <span className=\"\">{member.character} </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>{\" \"}\r\n        {/* <span className=\"h3\">The Cast: </span>\r\n        {actors} .... */}\r\n        {/* <a\r\n          className=\"link alert-link text-primary\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#collapseExample\"\r\n          aria-expanded=\"false\"\r\n          aria-controls=\"collapseExample\"\r\n        >\r\n          View All Cast\r\n        </a> */}\r\n      </div>\r\n\r\n      {/* <div className=\"container\">\r\n        <div className=\"row collapse\" id=\"collapseExample\">\r\n          {cast.map((member: ICast, index: number) => {\r\n            const imgSrc = member.profile_path\r\n              ? // ? `https://image.tmdb.org/t/p/original${member.profile_path}`\r\n                // `https://image.tmdb.org/t/p/w92/${member.profile_path}`\r\n                `https://image.tmdb.org/t/p/w185/${member.profile_path}`\r\n              : `${process.env.PUBLIC_URL}/img/no_image.png`;\r\n            return (\r\n              <div\r\n                key={index}\r\n                className=\"cast-container clo col-6 col-sm-4 col-md-3 p-0 border d-flex align-items-stretch\"\r\n              >\r\n                <div className=\"cast text-center\">\r\n                  <div className=\"cast__img-container\">\r\n                    <img src={imgSrc} alt={member.name} />\r\n                  </div>\r\n                  <div className=\"cast__character\">\r\n                    <span className=\"lead\">{member.name} </span>\r\n                    <br />\r\n                    <span className=\"\">{member.character} </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default Credits;\r\n","import React, { MouseEvent } from \"react\";\r\nimport { basePosterUrl } from \"../../urls_and_keys\";\r\n\r\ninterface Props {\r\n  image: {\r\n    file_path: string;\r\n  };\r\n  length: number;\r\n  //   openOverlay: (event: MouseEvent<HTMLButtonElement>) => void;\r\n  openOverlay: (event: MouseEvent<HTMLImageElement>) => void;\r\n}\r\n\r\nconst MovieImages: React.FC<Props> = ({ image, length, openOverlay }) => {\r\n  const openModal = (e: MouseEvent<HTMLImageElement>) => {\r\n    openOverlay(e);\r\n  };\r\n  return (\r\n    <div>\r\n      <img\r\n        onClick={openModal}\r\n        src={`${basePosterUrl}w1280${image.file_path}`}\r\n        style={{ width: \"100%\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieImages;\r\n","import React, { useRef, MouseEvent, useState, useEffect } from \"react\";\r\nimport Slider from \"react-slick\";\r\n// import { basePosterUrl } from \"../urls_and_keys\";\r\nimport MovieImages from \"./MovieImages\";\r\ninterface Props {\r\n  images: {\r\n    backdrops: { file_path: string }[];\r\n    posters: { file_path: string }[];\r\n  };\r\n}\r\n\r\nconst ImagesSlide: React.FC<Props> = ({ images: { backdrops } }) => {\r\n  const [imageSrc, setImageSrc] = useState(\"\");\r\n  const [showOverlay, setShowOverlay] = useState(false);\r\n  const overlayRef = useRef<any>();\r\n\r\n  const openOverlay = (event: MouseEvent<HTMLImageElement>) => {\r\n    setImageSrc(event.currentTarget.src);\r\n    setShowOverlay(true);\r\n  };\r\n\r\n  const overlayClickHandler = (e: MouseEvent) => {\r\n    if (e.target === overlayRef.current) {\r\n      setShowOverlay(false);\r\n    }\r\n  };\r\n\r\n  let settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    initialSlide: 1,\r\n\r\n    // className: \"center\",\r\n    // centerMode: true,\r\n\r\n    // slidesToShow: 1,\r\n    slidesToShow: 3,\r\n    // centerPadding: \"60px\",\r\n    // lazyLoad: true,\r\n    slidesToScroll: 3,\r\n    // autoplay: true,\r\n    autoplay: false,\r\n    // speed: 2000,\r\n    autoplaySpeed: 2000,\r\n    // autoplaySpeed: 1500\r\n    // cssEase: \"linear\"\r\n    pauseOnHover: false,\r\n\r\n    responsive: [\r\n      {\r\n        breakpoint: 768,\r\n        settings: {\r\n          className: \"center\",\r\n          centerMode: true,\r\n          dots: false,\r\n          arrows: false,\r\n          slidesToShow: 2,\r\n          infinite: true,\r\n          slidesToScroll: 1,\r\n          swipeToSlide: true\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          dots: false,\r\n          className: \"center\",\r\n          centerMode: true,\r\n          arrows: false,\r\n          slidesToShow: 1,\r\n          infinite: true,\r\n          slidesToScroll: 1,\r\n          swipeToSlide: true\r\n        }\r\n      }\r\n      // {\r\n      //   breakpoint: 992,\r\n      //   settings: \"unslick\"\r\n      // }\r\n    ]\r\n  };\r\n  return (\r\n    <div className=\"ImagesSlide mb-4\">\r\n      <Slider {...settings}>\r\n        {backdrops.map((image: any, index: number) => (\r\n          <MovieImages\r\n            image={image}\r\n            key={index}\r\n            openOverlay={openOverlay}\r\n            length={backdrops.length}\r\n          />\r\n        ))}\r\n      </Slider>\r\n      {showOverlay ? (\r\n        <>\r\n          <div\r\n            className=\"overlay\"\r\n            onClick={overlayClickHandler}\r\n            ref={overlayRef}\r\n          >\r\n            <button\r\n              onClick={() => setShowOverlay(false)}\r\n              type=\"button\"\r\n              className=\"close\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n            <div className=\"overlay__image-container\">\r\n              <img src={imageSrc} />\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImagesSlide;\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\ninterface Props {\r\n  video: {\r\n    name: string;\r\n    key: string;\r\n    id: string;\r\n    type: string;\r\n  };\r\n  index: number;\r\n}\r\n\r\nconst MovieVideos: React.FC<Props> = ({ video, index }) => {\r\n  const videoSrc = \"https://www.youtube.com/embed/\" + video.key;\r\n\r\n  const iframeRef = useRef<any>(null);\r\n  const modalRef = useRef<any>(null);\r\n\r\n  const playVideo = () => {\r\n    iframeRef.current.src = videoSrc;\r\n  };\r\n\r\n  const stopVideo = () => {\r\n    iframeRef.current.src = iframeRef.current.src;\r\n  };\r\n\r\n  useEffect(() => {\r\n    modalRef.current.addEventListener(\"click\", stopVideo);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-6 d-flex align-items-center  border-bottom\">\r\n            {video.name}\r\n          </div>\r\n          <div className=\"col d-flex align-items-center justify-content-center p-1\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary trailer-button\"\r\n              data-toggle=\"modal\"\r\n              data-target={\"#\" + \"trailer\" + index.toString()}\r\n              onClick={playVideo}\r\n            >\r\n              Watch Trailer\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"modal fade bd-example-modal-lg\"\r\n        id={\"trailer\" + index.toString()}\r\n        ref={modalRef}\r\n        tabIndex={-1}\r\n        role=\"dialog\"\r\n        aria-labelledby=\"myLargeModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">\r\n                {video.name}\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n                onClick={stopVideo}\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>{\" \"}\r\n            <div className=\"embed-responsive embed-responsive-16by9\">\r\n              <iframe\r\n                ref={iframeRef}\r\n                className=\"embed-responsive-item\"\r\n                src={\"\"}\r\n                allowFullScreen\r\n              ></iframe>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieVideos;\r\n","import React from \"react\";\r\nimport { PopularMovie } from \"../../model/PopularMovie\";\r\nimport { ICombined } from \"../../model/combined\";\r\n\r\ninterface Props {\r\n  combinedFetch: ICombined;\r\n  movie: PopularMovie;\r\n}\r\n\r\nconst BasicDetails: React.FC<Props> = ({\r\n  movie: { poster_path, title, release_date, overview },\r\n  combinedFetch: {\r\n    budget,\r\n    Genre,\r\n    Director,\r\n    Writer,\r\n    // Actors,\r\n    Country,\r\n    Awards,\r\n    Ratings,\r\n    imdbRating,\r\n    Production\r\n  }\r\n}) => {\r\n  let RottenTomato: string = \"\";\r\n\r\n  // console.log({ Ratings });\r\n  // console.log({ imdbRating });\r\n  if (Ratings && Ratings.length > 0) {\r\n    Ratings.map(Rat => {\r\n      if (Rat.Source === \"Rotten Tomatoes\") {\r\n        // console.log(\"gooooot it \");\r\n\r\n        RottenTomato = Rat.Value;\r\n        // console.log(Rat.Source);\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"basic-info-container\">\r\n      <div className=\"container-fluid basic-info\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-5 pt-4 text-center\">\r\n            <img className=\"basic-info__image\" src={poster_path} alt={title} />\r\n          </div>\r\n          <div className=\"col mt-3 mt-md-0 pt-4\">\r\n            {release_date && (\r\n              <>\r\n                <span>Release Date:</span> {release_date}\r\n                <br />\r\n              </>\r\n            )}\r\n\r\n            {Genre && Genre !== \"N/A\" && (\r\n              <>\r\n                {\" \"}\r\n                <span>Genres:</span> {Genre}\r\n                <br />\r\n              </>\r\n            )}\r\n\r\n            {budget && budget !== 0 && (\r\n              <>\r\n                <span>Budget:</span> {new Intl.NumberFormat().format(budget)}{\" \"}\r\n                <br />\r\n              </>\r\n            )}\r\n            {Director && Director !== \"N/A\" && (\r\n              <>\r\n                <span>Director:</span> {Director} <br />\r\n              </>\r\n            )}\r\n            {Writer && Writer !== \"N/A\" && (\r\n              <>\r\n                <span>Writer:</span> {Writer} <br />\r\n              </>\r\n            )}\r\n            {Country && Country !== \"N/A\" && (\r\n              <>\r\n                <span>Country:</span> {Country} <br />\r\n              </>\r\n            )}\r\n            {Awards && Awards !== \"N/A\" && (\r\n              <>\r\n                <span>Awards:</span> {Awards} <br />\r\n              </>\r\n            )}\r\n            {Production && Production !== \"N/A\" && (\r\n              <>\r\n                <span>Production:</span> {Production} <br />\r\n              </>\r\n            )}\r\n            {imdbRating && imdbRating !== \"N/A\" && (\r\n              <>\r\n                <span>IMDB: </span>\r\n                {imdbRating} <br />\r\n              </>\r\n            )}\r\n            {RottenTomato !== \"\" && RottenTomato !== \"N/A\" && (\r\n              <p>\r\n                <span>Rotten Tomatoes:</span> {RottenTomato}{\" \"}\r\n              </p>\r\n            )}\r\n            {overview && (\r\n              <p>\r\n                <span>Overview:</span> {overview}{\" \"}\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BasicDetails;\r\n","import React, { Suspense, useEffect } from \"react\";\r\nimport { RouteComponentProps, useHistory } from \"react-router-dom\";\r\nimport { useURL } from \"../../hooks/useURL\";\r\nimport useCombineFetch from \"../../hooks/useCombineFetch\";\r\nimport Credits from \"./Credits\";\r\nimport ImagesSlide from \"./ImagesSlide\";\r\nimport MovieVideos from \"./MovieVideos\";\r\nimport BasicDetails from \"./BasicDetails\";\r\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\r\n\r\ninterface Props extends RouteComponentProps<{ id: string }> {}\r\n\r\nconst MovieDetails: React.FC<Props> = () => {\r\n  // const id = props.match.params.id;\r\n  const history = useHistory<any>();\r\n  console.log({ history });\r\n\r\n  const movie = JSON.parse(history.location.state.movie);\r\n\r\n  console.log({ movie });\r\n\r\n  const { url } = useURL(movie.isMovie, movie.id);\r\n\r\n  console.log({ url });\r\n\r\n  const [combinedFetch] = useCombineFetch(url);\r\n\r\n  console.log({ combinedFetch });\r\n\r\n  const [storageValue, setStorageValue] = useLocalStorage(\r\n    \"movie-detail\",\r\n    JSON.stringify(combinedFetch)\r\n  );\r\n\r\n  // const [testState, setTestState] = useLocalStorage(\"test\", {\r\n  //   one: \"one\",\r\n  //   two: \"two\"\r\n  // });\r\n  // console.log({ testState });\r\n  useEffect(() => {\r\n    // setTestState(\"two\");\r\n    setStorageValue(combinedFetch);\r\n\r\n    return () => localStorage.removeItem(\"movie-detail\");\r\n  }, [combinedFetch]);\r\n  console.log(\"OUT\", { storageValue });\r\n\r\n  console.log({ combinedFetch });\r\n\r\n  // let trailers: Element;\r\n  let trailers: any;\r\n  let images: any;\r\n  if (combinedFetch) {\r\n    if (!combinedFetch?.videos || combinedFetch?.videos?.results.length === 0) {\r\n      trailers = <h3>No Videos Found! </h3>;\r\n    } else {\r\n      trailers = combinedFetch.videos.results.map((video, index) => (\r\n        <MovieVideos video={video} key={index} index={index} />\r\n      ));\r\n    }\r\n\r\n    if (!combinedFetch?.images || !combinedFetch?.images?.backdrops) {\r\n      images = <h3>No Images Found </h3>;\r\n    } else {\r\n      images = <ImagesSlide images={combinedFetch.images} />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      // style={{ width: \"100% !important\" }}\r\n      // className=\"movie-details-container mt-5 p-5 container-fluid\"\r\n      // className=\"movie-details-container mt-sm-5 px-sm-5 pb-5\"\r\n      className=\"movie-details-container  px-sm-5 pb-5\"\r\n    >\r\n      <div id=\"accordion\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header\" id=\"headingOne\">\r\n            <h5 className=\"mb-0\">\r\n              <button\r\n                className=\"btn btn-link\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\"#collapseOne\"\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n              >\r\n                Movie Details\r\n              </button>\r\n            </h5>\r\n          </div>\r\n\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-parent=\"#accordion\"\r\n          >\r\n            <div className=\"card-body\">\r\n              <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12  text-center border border-red\">\r\n                    <p className=\"h1 my-3 movie-detail__title\">\r\n                      {movie.title}{\" \"}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                {/* <p className=\"h1\">Title: {title} </p> */}\r\n              </div>\r\n\r\n              <BasicDetails combinedFetch={combinedFetch} movie={movie} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\" id=\"headingTwo\">\r\n            <h5 className=\"mb-0\">\r\n              <button\r\n                className=\"btn btn-link collapsed\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\"#collapseTwo\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseTwo\"\r\n              >\r\n                Media (Images and Videos)\r\n              </button>\r\n            </h5>\r\n          </div>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-parent=\"#accordion\"\r\n          >\r\n            {images}\r\n\r\n            {// combinedFetch &&\r\n            // combinedFetch.videos &&\r\n            combinedFetch?.videos?.results && (\r\n              <div className=\"container\">\r\n                <p className=\"trailer-available\">Available Trailers:</p>{\" \"}\r\n              </div>\r\n            )}\r\n            {trailers}\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\" id=\"headingThree\">\r\n            <h5 className=\"mb-0\">\r\n              <button\r\n                className=\"btn btn-link collapsed\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\"#collapseThree\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseThree\"\r\n              >\r\n                Credits: The Cast....\r\n              </button>\r\n            </h5>\r\n          </div>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-parent=\"#accordion\"\r\n          >\r\n            <div className=\"card-body\">\r\n              {combinedFetch && Object.keys(combinedFetch).length === 0 && (\r\n                <h1>No Actors Found</h1>\r\n              )}\r\n              {combinedFetch.Actors === \"N/A\" && <h1>No Actors Found</h1>}\r\n              {combinedFetch && combinedFetch.credits && (\r\n                // {combinedFetch && combinedFetch.credits && combinedFetch.credits.cast && (\r\n                <div className=\"container mt-4\">\r\n                  <Credits\r\n                    cast={combinedFetch.credits.cast}\r\n                    actors={combinedFetch.Actors}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","//\r\n\r\nexport const useURL = (isMovie: boolean, movieId: string) => {\r\n  // const url = isMovie\r\n  //   ? `${tmdb_url_before}${movieId}${tmdb_url_after}`\r\n  //   : `${tv_tmdb_url_before}${movieId}${tv_tmdb_url_after}`;\r\n\r\n  const url = isMovie\r\n    ? `https://api.themoviedb.org/3/movie/${movieId}?api_key=${process.env.REACT_APP_TMDB_KEY}&append_to_response=videos,images,credits,external_ids&include_image_language=en,null`\r\n    : `https://api.themoviedb.org/3/tv/${movieId}?api_key=${process.env.REACT_APP_TMDB_KEY}&append_to_response=videos,images,credits,external_ids&include_image_language=en,null`;\r\n\r\n  return { url };\r\n};\r\n// append_to_response=videos,images,credits,external_ids\r\n","import React from \"react\";\r\n\r\ninterface Props {}\r\n\r\nconst ViewAll: React.FC<Props> = () => {\r\n  return (\r\n    <div>\r\n      <h1>Allllll </h1>\r\n      <h1>Allllll </h1>\r\n      <h1>Allllll </h1>\r\n      <h1>Allllll </h1>\r\n      <h1>Allllll </h1>\r\n      <h1>Allllll </h1>\r\n      <h1>Allllll </h1>\r\n      <h1>Allllll </h1>\r\n      <h1>Allllll </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewAll;\r\n","import React, { ReactElement } from \"react\";\r\n\r\ninterface Props {}\r\n\r\nexport default function NotFound({}: Props): ReactElement {\r\n  return (\r\n    <div\r\n      className=\"container-fluid text-center bg-dark font-weight-bold text-light\"\r\n      style={{ height: \"100vh\" }}\r\n    >\r\n      <div className=\"row h-100  my-auto\">\r\n        <div className=\"col-12  d-flex flex-column justify-content-center\">\r\n          <p className=\"display-1\">404</p>\r\n          <p>Not Found...!!!!! </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useReducer } from \"react\";\n// import { movieReducer, initialState, State } from \"./appState/movieReducer\";\nimport { movieReducer, initialState } from \"./appState/movieReducer\";\nimport { Actions } from \"./appState/movieActions\";\n// import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ScrollToTop from \"./ScrollTop\";\n// import MainSlider from \"./components/slider/MainSlider\";\n\nimport \"./App.scss\";\n// import MoviesList from \"./components/MoviesList\";\nimport MainNav from \"./components/navbar/MainNav\";\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport SearchResults from \"./components/SearchResults\";\n// import MovieDetails from \"./pages/MovieDetails\";\nimport MovieDetails from \"./components/movie-details/MovieDetails\";\nimport ViewAll from \"./components/ViewAll\";\nimport NotFound from \"./components/NotFound\";\n\nexport type StoreApi = {\n  state: typeof initialState;\n  dispatch: React.Dispatch<Actions>;\n  // dispatch: React.Dispatch<any>;\n};\n\nexport const MoviesContext = React.createContext<\n  StoreApi | typeof initialState\n>(initialState);\n\nconst App: React.FC = () => {\n  const [state, dispatch] = useReducer(movieReducer, initialState);\n\n  return (\n    <div className=\"app min-vh-100\">\n      {/* <div className=\"app \"> */}\n      <MoviesContext.Provider value={{ state, dispatch } as StoreApi}>\n        <Router basename=\"/movie-catalog\">\n          {/* <Router> */}\n          <ScrollToTop />\n          <MainNav />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/results\" component={SearchResults} />\n            <Route exact path=\"/viewall\" component={ViewAll} />\n            <Route exact path=\"/movie/:id/:title\" component={MovieDetails} />\n            <Route\n              exact\n              // path=\"/search?keyword:keyword\"\n              path=\"/search/keyword:keyword\"\n              component={SearchResults}\n            />\n            <Route path=\"/\" render={NotFound} />\n          </Switch>\n        </Router>\n      </MoviesContext.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}