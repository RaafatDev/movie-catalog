{"version":3,"sources":["appState/movieReducer.tsx","ScrollTop.tsx","components/Footer.tsx","styled-components/globalStyles.ts","components/Layout.tsx","appState/movieActions.ts","components/movies-list/Movie.tsx","urls_and_keys.ts","model/genre.ts","hooks/usePrepareMoviesArr.ts","hooks/useFetch.ts","components/movies-list/MoviesList.tsx","components/slider/Slide.tsx","components/slider/MainSlider.tsx","pages/Home.tsx","pages/About.tsx","hooks/useDebouncedSearch.ts","pages/SearchResults.tsx","pages/ViewAll.tsx","pages/NotFound.tsx","hooks/useURL.ts","hooks/useFetchOrSession.ts","components/movie-details/Credits.tsx","components/movie-details/MovieImages.tsx","components/movie-details/ImagesSlide.tsx","components/movie-details/MovieVideos.tsx","components/movie-details/BasicDetails.tsx","pages/MovieDetails.tsx","components/navbar/Suggestion.tsx","hooks/useLocalStorage.ts","components/navbar/MainNav.tsx","App.tsx","serviceWorker.ts","config.ts","index.tsx"],"names":["initialState","loading","movieArr","tvShowArr","error","movieReducer","state","action","type","payload","withRouter","history","useEffect","unListen","listen","window","scrollTo","Footer","props","GlobalStyle","createGlobalStyle","Layout","children","movieRequestFailure","Movie","oneMovie","isMovie","id","poster_path","title","release_date","kind","to","pathname","split","join","movie","JSON","stringify","className","src","alt","basePosterUrl","dbKey","popular_url","popular_tv_url","movieGenres","name","usePrepareMoviesArr","rowArr","useState","sortedArr","setSortedArr","sortData","movieInfoArr","length","console","log","results","map","genre_ids","movie_genre","number","find","genreObject","movieInfo","first_air_date","process","backdrop_path","overview","Genres","push","useFetch","url","data","setData","setError","isLoading","setIsLoading","a","fetch","response","json","fetchData","MoviesList","useContext","MoviesContext","dispatch","dataArr","tvDataArr","sortedTvShowsArr","sortedMoviesArr","slice","x","key","Slid","MainSlider","settings","slidesToShow","slidesToScroll","dots","infinite","initialSlide","autoplay","arrows","autoplaySpeed","pauseOnHover","Home","About","style","height","width","useDebouncedSearch","value","delay","debouncedValue","setDebouncedValue","searchMovie","searchTerm","search_url","handler","setTimeout","clearTimeout","then","SearchResults","match","setMovieArr","sortedFromDebounced","params","keyword","substring","xArr","localStorage","getItem","xArrParsed","parse","onunload","removeItem","toUpperCase","ViewAll","color","NotFound","TMDB_KEY","useFetchOrSession","tmdb_url","nestedFetch","combined","tmdb_data","imdb_id","external_ids","omdb_url","omdb_data","sortCombinedData","sortedCombined","number_of_episodes","number_of_seasons","credits","budget","videos","images","Genre","Director","Writer","Actors","Country","Awards","Ratings","imdbRating","Production","Runtime","Credits","cast","actors","member","index","imgSrc","profile_path","character","MovieImages","image","openOverlay","onClick","e","file_path","ImagesSlide","backdrops","imageSrc","setImageSrc","showOverlay","setShowOverlay","overlayRef","useRef","event","currentTarget","responsive","breakpoint","centerMode","swipeToSlide","target","current","ref","aria-label","aria-hidden","MovieVideos","video","videoSrc","iframeRef","modalRef","stopVideo","addEventListener","data-toggle","data-target","toString","tabIndex","role","aria-labelledby","data-dismiss","allowFullScreen","BasicDetails","combinedFetch","budgetFormat","Intl","NumberFormat","format","undefined","RottenTomato","Rat","Source","Value","MovieDetails","trailers","movieId","useURL","movieDetails","aria-expanded","aria-controls","data-parent","Object","keys","Suggestion","useLocalStorage","initialValue","local","setLocal","setItem","MainNav","setSearchTerm","showSuggestions","setShowSuggestions","searchRef","React","setSearchBoxArr","handleClick","clickedElement","clickedButton","closest","clickedSearchBox","clickedSuggestions","removeEventListener","onChange","placeholder","searchedMovies","createContext","App","useReducer","Provider","basename","exact","path","component","render","Boolean","location","hostname","config","REACT_APP_STAGE","API_URL","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a44d49b6.chunk.js","sourcesContent":["import { Actions } from \"./movieActions\";\r\n\r\nexport const initialState = {\r\n  loading: false,\r\n  movieArr: [],\r\n  tvShowArr: [],\r\n  error: \"\"\r\n};\r\n\r\nexport type State = {\r\n  loading: boolean;\r\n  movieArr: any[];\r\n  tvShowArr: any[];\r\n  error: string;\r\n};\r\n// export type Actions = MOVIE_REQUEST | fetch | MOVIE_REQUEST_FAILURE | any;\r\nexport const movieReducer = (\r\n  state: State = initialState,\r\n  action: Actions\r\n): State => {\r\n  switch (action.type) {\r\n    case \"MovieRequestSend\":\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n\r\n    case \"TvShowRequestSuccess\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        tvShowArr: action.payload\r\n      };\r\n\r\n    case \"MovieRequestSuccess\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        movieArr: action.payload\r\n      };\r\n\r\n    case \"MovieRequestFailure\":\r\n      return {\r\n        // ...state,\r\n        loading: false,\r\n        movieArr: [],\r\n        tvShowArr: [],\r\n        // error: action.payload\r\n        error: \"something went wrong! \"\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// type MOVIE_REQUEST = {\r\n//   type: \"MOVIE_REQUEST\";\r\n// };\r\n\r\n// type fetch = {\r\n//   type?: \"MOVIE_REQUEST_SUCCESS\";\r\n//   payload?: [];\r\n// };\r\n\r\n// type MOVIE_REQUEST_FAILURE = {\r\n//   type?: \"MOVIE_REQUEST_FAILURE\";\r\n//   payload?: \"\";\r\n// };\r\n","import { useEffect } from \"react\";\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\n\r\ninterface Props extends RouteComponentProps<{ id: string }> {}\r\n// console.log(\"Scroll to top !!!\");\r\n\r\nconst ScrollToTop: React.FC<Props> = ({ history }) => {\r\n  useEffect(() => {\r\n    // console.log(\"use Effect ini Scroll to top !!!\");\r\n\r\n    const unListen = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unListen();\r\n    };\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from \"react\";\r\n\r\ninterface Props {}\r\n\r\nconst Footer = (props: Props) => {\r\n  return (\r\n    <div>\r\n      <p>Footer !!</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box; \r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport Footer from \"./Footer\";\r\n// import Navbar from \"./navbar/Navbar\";\r\nimport Navbar from \"./nav/Navbar\";\r\n\r\nimport GlobalStyle from \"../styled-components/globalStyles\";\r\n\r\ninterface Props {\r\n  children: React.ReactNode;\r\n}\r\n\r\n// const Layout = (props: Props) => {\r\nconst Layout = ({ children }: Props) => {\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      {/* <Navbar /> */}\r\n      <div>{children}</div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { PopularMovie } from \"../model/PopularMovie\";\r\n\r\n// export type MOVIE_REQUEST = {\r\n//   type: \"MOVIE_REQUEST\";\r\n// };\r\n\r\n// export type fetch = {\r\n//   type?: \"MOVIE_REQUEST_SUCCESS\";\r\n//   payload?: [];\r\n// };\r\n\r\n// export type MOVIE_REQUEST_FAILURE = {\r\n//   type?: \"MOVIE_REQUEST_FAILURE\";\r\n//   payload?: \"\";\r\n// };\r\n\r\nexport type MovieRequestSend = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\nexport type TvShowRequestSuccess = {\r\n  type: string;\r\n  payload: PopularMovie[];\r\n};\r\n\r\nexport type MovieRequestSuccess = {\r\n  type: string;\r\n  payload: PopularMovie[];\r\n};\r\n\r\nexport type MovieRequestFailure = {\r\n  type: string;\r\n  payload: string;\r\n};\r\n\r\n// export type Actions = MOVIE_REQUEST | fetch | MOVIE_REQUEST_FAILURE | any;\r\nexport type Actions =\r\n  | MovieRequestSend\r\n  | MovieRequestSuccess\r\n  | TvShowRequestSuccess\r\n  | MovieRequestFailure;\r\n\r\nexport function movieRequestSend() {\r\n  return {\r\n    type: \"MovieRequestSend\"\r\n  };\r\n}\r\n\r\nexport function tvShowRequestSuccess(tvShows: PopularMovie[]) {\r\n  return {\r\n    type: \"TvShowRequestSuccess\",\r\n    payload: tvShows\r\n  };\r\n}\r\n\r\nexport function movieRequestSuccess(movies: PopularMovie[]) {\r\n  return {\r\n    type: \"MovieRequestSuccess\",\r\n    payload: movies\r\n  };\r\n}\r\n\r\nexport function movieRequestFailure(error: any) {\r\n  return {\r\n    type: \"MovieRequestFailure\",\r\n    payload: error\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { PopularMovie } from \"../../model/PopularMovie\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface MovieProps {\r\n  oneMovie: PopularMovie;\r\n}\r\n\r\nconst Movie: React.FC<MovieProps> = ({ oneMovie }) => {\r\n  const { isMovie, id, poster_path, title, release_date } = oneMovie;\r\n  const kind: string = isMovie ? \"film\" : \"tv-show\";\r\n\r\n  return (\r\n    <Link\r\n      to={{\r\n        pathname: `/details/${kind}/${id}/${title.split(\" \").join(\"-\")}`,\r\n        state: {\r\n          movie: JSON.stringify(oneMovie)\r\n        }\r\n      }}\r\n    >\r\n      <div className=\"movie-container text-center\">\r\n        <img\r\n          className=\"movie-container__image rounded-lg\"\r\n          src={poster_path}\r\n          alt={title + id}\r\n        />\r\n        <div className=\"movie-container__info p-2\">\r\n          <p className=\"lead mb-0\">{title}</p>\r\n          <p className=\"lead\">({release_date}) </p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","// export const imgBaseUrl = \"https://image.tmdb.org/t/p/w1280/\";\r\nexport const basePosterUrl = `https://image.tmdb.org/t/p/`;\r\nexport const baseActorFaceUrl = `https://image.tmdb.org/t/p/w66_and_h66_face/`;\r\nexport const youtubeBseUrl = `https://www.youtube.com/watch?v=`;\r\nexport const dbKey = \"0080b388d26799f530961ac46923ae6a\";\r\n// let popular_url = `https://api.themoviedb.org/3/movie/popular?api_key=${dbKey}&language=en-US&page=1`;\r\nexport let popular_url = `https://api.themoviedb.org/3/movie/popular?api_key=${dbKey}&language=en-US&page=1`;\r\n// export let popular_tv_url = `https://api.themoviedb.org/3/tv/popular?api_key=${dbKey}&language=en-US&page=1`;\r\nexport let popular_tv_url = `https://api.themoviedb.org/3/tv/popular?api_key=${dbKey}&language=en-US&page=1&append_to_response=external_ids`;\r\nexport let tv_external_id = `http://api.themoviedb.org/3/tv/500?api_key=${dbKey}&append_to_response=external_ids`;\r\n\r\nconst apiKey = \"3ff4ea5b\";\r\n// const dbKey = \"0243c3f17573e5ce67e3c565fa006544\";\r\n// let basePosterUrl = `https://image.tmdb.org/t/p/`;\r\n\r\n// before: before the imdb_id\r\n// after: after the imdb_id\r\nexport const tv_tmdb_url_before = `https://api.themoviedb.org/3/tv/`;\r\n// export const tv_tmdb_url_after = `?api_key=0243c3f17573e5ce67e3c565fa006544&language=en-US&append_to_response=videos`;\r\n// export const tv_tmdb_url_after = `?api_key=0243c3f17573e5ce67e3c565fa006544&language=en-US&append_to_response=videos,external_ids`;\r\n// export const tv_tmdb_url_after = `?api_key=0243c3f17573e5ce67e3c565fa006544&language=en-US&append_to_response=videos,external_ids,recommendations&include_image_language=en,null`;\r\nexport const tv_tmdb_url_after = `?api_key=0243c3f17573e5ce67e3c565fa006544&append_to_response=videos,images&include_image_language=en,null`;\r\n\r\n// !!!!!!!!\r\n// export const experimental = `https://api.themoviedb.org/3/movie/550?api_key=${dbKey}&language=en-US&append_to_response=images&include_image_language=en,null`;\r\n// export const experimental = `https://api.themoviedb.org/3/movie/60625?api_key=${dbKey}&language=en-US&append_to_response=images&include_image_language=en,null`;\r\nexport const experimental = `https://api.themoviedb.org/3/tv/85949/images?api_key=${dbKey}&language=en-US&include_image_language=en,null`;\r\n\r\nexport const tmdb_url_before = `https://api.themoviedb.org/3/movie/`;\r\n// export const tmdb_url_after = `?api_key=0243c3f17573e5ce67e3c565fa006544&append_to_response=videos,images,credits&include_image_language=en,null`;\r\nexport const tmdb_url_after = `?api_key=0243c3f17573e5ce67e3c565fa006544&append_to_response=videos,images,credits,external_ids&include_image_language=en,null`;\r\n\r\n/*\r\nexport const tv_tmdb_url = `https://api.themoviedb.org/3/tv/${id}?api_key=${dbKey}&language=en-US&append_to_response=videos`;\r\n\r\nget the {imdb_id , youtube trailer id } from the TMDB API to use it in the omdb api\r\nconst tmdb_url = `https://api.themoviedb.org/3/movie/${id}?api_key=${dbKey}&append_to_response=videos`;\r\nexport const tmdb_url = `https://api.themoviedb.org/3/movie/${id}?api_key=${dbKey}&append_to_response=videos,images&include_image_language=en,null`;\r\n*/\r\n// const apiKey = \"3ff4ea5b\";\r\n// !\r\n// const omdb_url = `https://www.omdbapi.com/?apikey=${apiKey}&i=${tmdb_data.imdb_id}&plot=full`;\r\nexport const omdb_url_before = `https://www.omdbapi.com/?apikey=${apiKey}&i=`;\r\nexport const omdb_url_after = `&plot=full`;\r\n\r\n/*\r\n\r\nconst movieInfo = {\r\n      imdb_id: tmdb_data.imdb_id,\r\n      Title: tmdb_data.title ? tmdb_data.title : tmdb_data.name,\r\n      ReleaseDate: tmdb_data.release_date\r\n        ? tmdb_data.release_date\r\n        : tmdb_data.first_air_date,\r\n      // imdbID: tmdb_data.id,\r\n      MovieID: JSON.stringify(tmdb_data.id),\r\n      Poster: `${basePosterUrl}w1280${tmdb_data.poster_path}`,\r\n      BigPoster: `${basePosterUrl}w1280${tmdb_data.backdrop_path}`,\r\n      Plot: tmdb_data.overview,\r\n      // Genre: tmdb_data.genres,\r\n      Videos: tmdb_data.videos,\r\n      // Genres: movie_genre\r\n      // ########################3\r\n      Actors: omdb_data.Actors,\r\n      Country: omdb_data.Country,\r\n      Director: omdb_data.Director,\r\n      Genre: omdb_data.Genre,\r\n      Language: omdb_data.Language,\r\n      Production: omdb_data.Production,\r\n      Ratings: omdb_data.Ratings,\r\n      Runtime: omdb_data.Runtime,\r\n      Year: omdb_data.Year,\r\n      imdbRating: omdb_data.imdbRating,\r\n      Awards: omdb_data.Awards,\r\n      Images: tmdb_data.images.backdrops\r\n    };\r\n\r\n\r\n*/\r\n","export const movieGenres = [\r\n  {\r\n    id: 28,\r\n    name: \"Action\"\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"Adventure\"\r\n  },\r\n  {\r\n    id: 16,\r\n    name: \"Animation\"\r\n  },\r\n  {\r\n    id: 35,\r\n    name: \"Comedy\"\r\n  },\r\n  {\r\n    id: 80,\r\n    name: \"Crime\"\r\n  },\r\n  {\r\n    id: 99,\r\n    name: \"Documentary\"\r\n  },\r\n  {\r\n    id: 18,\r\n    name: \"Drama\"\r\n  },\r\n  {\r\n    id: 10751,\r\n    name: \"Family\"\r\n  },\r\n  {\r\n    id: 14,\r\n    name: \"Fantasy\"\r\n  },\r\n  {\r\n    id: 36,\r\n    name: \"History\"\r\n  },\r\n  {\r\n    id: 27,\r\n    name: \"Horror\"\r\n  },\r\n  {\r\n    id: 10402,\r\n    name: \"Music\"\r\n  },\r\n  {\r\n    id: 9648,\r\n    name: \"Mystery\"\r\n  },\r\n  {\r\n    id: 10749,\r\n    name: \"Romance\"\r\n  },\r\n  {\r\n    id: 878,\r\n    name: \"Science Fiction\"\r\n  },\r\n  {\r\n    id: 10770,\r\n    name: \"TV Movie\"\r\n  },\r\n  {\r\n    id: 53,\r\n    name: \"Thriller\"\r\n  },\r\n  {\r\n    id: 10752,\r\n    name: \"War\"\r\n  },\r\n  {\r\n    id: 37,\r\n    name: \"Western\"\r\n  }\r\n];\r\n\r\nexport const tvGenres = [\r\n  {\r\n    id: 10759,\r\n    name: \"Action & Adventure\"\r\n  },\r\n  {\r\n    id: 16,\r\n    name: \"Animation\"\r\n  },\r\n  {\r\n    id: 35,\r\n    name: \"Comedy\"\r\n  },\r\n  {\r\n    id: 80,\r\n    name: \"Crime\"\r\n  },\r\n  {\r\n    id: 99,\r\n    name: \"Documentary\"\r\n  },\r\n  {\r\n    id: 18,\r\n    name: \"Drama\"\r\n  },\r\n  {\r\n    id: 10751,\r\n    name: \"Family\"\r\n  },\r\n  {\r\n    id: 10762,\r\n    name: \"Kids\"\r\n  },\r\n  {\r\n    id: 9648,\r\n    name: \"Mystery\"\r\n  },\r\n  {\r\n    id: 10763,\r\n    name: \"News\"\r\n  },\r\n  {\r\n    id: 10764,\r\n    name: \"Reality\"\r\n  },\r\n  {\r\n    id: 10765,\r\n    name: \"Sci-Fi & Fantasy\"\r\n  },\r\n  {\r\n    id: 10766,\r\n    name: \"Soap\"\r\n  },\r\n  {\r\n    id: 10767,\r\n    name: \"Talk\"\r\n  },\r\n  {\r\n    id: 10768,\r\n    name: \"War & Politics\"\r\n  },\r\n  {\r\n    id: 37,\r\n    name: \"Western\"\r\n  }\r\n];\r\n","import { useState, useEffect } from \"react\";\r\nimport { movieGenres } from \"../model/genre\";\r\nimport { PopularMovie } from \"../model/PopularMovie\";\r\nimport { basePosterUrl } from \"../urls_and_keys\";\r\n\r\nconst usePrepareMoviesArr = (rowArr: any) => {\r\n  //\r\n  const [sortedArr, setSortedArr] = useState<any>([]);\r\n\r\n  const sortData = (rowArr: any) => {\r\n    let movieInfoArr: any[] = [];\r\n\r\n    if (!rowArr) return;\r\n\r\n    if (rowArr.length === 0) return;\r\n\r\n    console.log(\"rowArr:\", rowArr);\r\n\r\n    rowArr.results.map((movie: PopularMovie) => {\r\n      if (!movie.genre_ids) return;\r\n      const movie_genre = movie.genre_ids\r\n        .map((number: any) => {\r\n          return movieGenres.find((genreObject) => {\r\n            return genreObject.id === number;\r\n          })?.name;\r\n        })\r\n        .join(\", \");\r\n\r\n      const movieInfo = {\r\n        isMovie: movie.title ? true : false,\r\n        title: movie.title ? movie.title : movie.name,\r\n        release_date: movie.release_date\r\n          ? movie.release_date\r\n          : movie.first_air_date,\r\n        // imdbID: movie.id,\r\n        id: JSON.stringify(movie.id),\r\n        poster_path: movie.poster_path\r\n          ? // ? `${basePosterUrl}w1280${movie.poster_path}`\r\n            `${basePosterUrl}w300${movie.poster_path}`\r\n          : `${process.env.PUBLIC_URL}/img/no_image.png`,\r\n        backdrop_path: movie.backdrop_path\r\n          ? // ? `${basePosterUrl}w1280${movie.backdrop_path}`\r\n            `${basePosterUrl}w780${movie.backdrop_path}`\r\n          : `${process.env.PUBLIC_URL}/img/no_image.png`,\r\n        overview: movie.overview,\r\n        genre_ids: movie.genre_ids,\r\n        Genres: movie_genre,\r\n      };\r\n      movieInfoArr.push(movieInfo);\r\n      // return Arr.push(movieArrTwo);\r\n    });\r\n\r\n    setSortedArr([...movieInfoArr]);\r\n  };\r\n  useEffect(() => {\r\n    sortData(rowArr);\r\n  }, [rowArr]);\r\n\r\n  return [sortedArr, sortData];\r\n};\r\n\r\nexport default usePrepareMoviesArr;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport function useFetch(url: string) {\r\n  const [data, setData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await fetch(url);\r\n        const json = await response.json();\r\n\r\n        setData(json);\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  return [data, isLoading, error];\r\n}\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport {\r\n  movieRequestSend,\r\n  movieRequestSuccess,\r\n  movieRequestFailure,\r\n  tvShowRequestSuccess\r\n} from \"../../appState/movieActions\";\r\nimport { MoviesContext } from \"../../App\";\r\nimport { PopularMovie } from \"../../model/PopularMovie\";\r\n\r\nimport Movie from \"./Movie\";\r\n\r\nimport { popular_tv_url, popular_url } from \"../../urls_and_keys\";\r\n\r\nimport usePrepareMoviesArr from \"../../hooks/usePrepareMoviesArr\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\n\r\nconst MoviesList: React.FC = () => {\r\n  //!\r\n  const { state, dispatch } = useContext<any>(MoviesContext);\r\n  const [dataArr, isLoading, error] = useFetch(popular_url);\r\n  const [tvDataArr, tvIsLoading, tvError] = useFetch(popular_tv_url);\r\n  // const [sortedTvShowsArr] = usePrepareMoviesArr(tvDataArr, dispatch);\r\n  const [sortedTvShowsArr] = usePrepareMoviesArr(tvDataArr);\r\n  // const [sortedMoviesArr] = usePrepareMoviesArr(dataArr, dispatch);\r\n  const [sortedMoviesArr] = usePrepareMoviesArr(dataArr);\r\n\r\n  useEffect(() => {\r\n    if (isLoading) dispatch(movieRequestSend());\r\n    if (sortedTvShowsArr) dispatch(tvShowRequestSuccess(sortedTvShowsArr));\r\n    if (sortedMoviesArr) dispatch(movieRequestSuccess(sortedMoviesArr));\r\n    if (error) dispatch(movieRequestFailure);\r\n  }, [sortedMoviesArr, sortedTvShowsArr]);\r\n  // console.log(\"the global state\", state);\r\n\r\n  return (\r\n    // <div className=\"container bg-primary p-4 p-md-0 mt-4\">\r\n    // <div className=\"container bg-primary  mt-4\">\r\n    <div className=\"movies-list-container container text-light  mt-4\">\r\n      <h1>Movies</h1>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {state &&\r\n            state.movieArr &&\r\n            state.movieArr.slice(0, 10).map((x: PopularMovie) => (\r\n              <div\r\n                className=\"col m-2 p-0 d-flex justify-content-center align-items-stretch\"\r\n                key={x.id}\r\n              >\r\n                <Movie oneMovie={x} key={x.id} />\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      {/* <br /> */}\r\n      <h1>TV Shows</h1>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {state &&\r\n            state.tvShowArr &&\r\n            state.tvShowArr.slice(0, 10).map((x: PopularMovie) => (\r\n              <div\r\n                className=\"col m-2 p-0 d-flex justify-content-center align-items-stretch\"\r\n                key={x.id}\r\n              >\r\n                <Movie oneMovie={x} key={x.id} />\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesList;\r\n","import React from \"react\";\r\nimport { PopularMovie } from \"../../model/PopularMovie\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface MovieProps {\r\n  oneMovie: PopularMovie;\r\n}\r\nconst Slid: React.FC<MovieProps> = ({ oneMovie }) => {\r\n  const {\r\n    isMovie,\r\n    title,\r\n    backdrop_path,\r\n    id,\r\n    overview,\r\n    release_date,\r\n    Genres\r\n  } = oneMovie;\r\n\r\n  const kind: string = isMovie ? \"film\" : \"tv-show\";\r\n\r\n  // if (backdrop_path === \"/img/no_image.png\") {\r\n  //   return null;\r\n  // }\r\n\r\n  return (\r\n    <div className=\"slide-container\">\r\n      <img src={backdrop_path} alt={title} />\r\n      <div className=\"container\">\r\n        <div className=\"slide slide--has-caption slick-slide\">\r\n          <div className=\"slide__caption\">\r\n            <Link\r\n              to={{\r\n                // pathname: `/movie/${id}/${title.split(\" \").join(\"-\")}`,\r\n                pathname: `/details/${kind}/${id}/${title\r\n                  .split(\" \")\r\n                  .join(\"-\")}`,\r\n                state: {\r\n                  movie: JSON.stringify(oneMovie)\r\n                }\r\n              }}\r\n            >\r\n              <h1 className=\"slide__caption__title\">{title}</h1>\r\n            </Link>\r\n            <ul className=\"list-inline\">\r\n              <li className=\"slide__caption__release-date list-inline-item\">\r\n                <span>Release date: </span>\r\n                {release_date}\r\n              </li>\r\n              <li className=\"slide__caption__genres list-inline-item\">\r\n                <span>Genres: </span>\r\n                {Genres}\r\n              </li>\r\n            </ul>\r\n            <p className=\"slide__caption__overview d-none d-md-block\">\r\n              {overview}{\" \"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slid;\r\n","import React, { useContext } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport { MoviesContext } from \"../../App\";\r\nimport Slid from \"./Slide\";\r\nimport { PopularMovie } from \"../../model/PopularMovie\";\r\n\r\n// class MainSlider extends React.Component {\r\nconst MainSlider: React.FC = () => {\r\n  // const { state, dispatch } = useContext<any>(MoviesContext);\r\n  const { state } = useContext<any>(MoviesContext);\r\n  // const mainSliderRef = React.useRef<any>(null);\r\n  //! $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$4\r\n\r\n  var settings = {\r\n    // dots: true,\r\n    // infinite: true,\r\n    // speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    dots: true,\r\n    infinite: true,\r\n    // speed: 500,\r\n    initialSlide: 1,\r\n    // slidesToShow: 3,\r\n    // slidesToScroll: 3\r\n    autoplay: true,\r\n    // autoplay: false,\r\n    arrows: false,\r\n    // speed: 2000,\r\n    autoplaySpeed: 5000,\r\n    // autoplaySpeed: 1500\r\n    // cssEase: \"linear\"\r\n    pauseOnHover: false\r\n    // pauseOnHover: true\r\n\r\n    // responsive: [\r\n    //   {\r\n    //     breakpoint: 1024,\r\n    //     settings: {\r\n    //       slidesToShow: 3,\r\n    //       slidesToScroll: 3,\r\n    //       infinite: true,\r\n    //       dots: true\r\n    //     }\r\n    //   },\r\n    //   {\r\n    //     breakpoint: 600,\r\n    //     settings: {\r\n    //       slidesToShow: 2,\r\n    //       slidesToScroll: 2,\r\n    //       initialSlide: 2\r\n    //     }\r\n    //   },\r\n    //   {\r\n    //     breakpoint: 480,\r\n    //     settings: {\r\n    //       slidesToShow: 1,\r\n    //       slidesToScroll: 1\r\n    //     }\r\n    //   }\r\n    // ]\r\n  };\r\n  // console.log(state);\r\n  // console.log(process.env.PUBLIC_URL);\r\n  // console.log(process.env);\r\n\r\n  return (\r\n    <div className=\"main-slider container\">\r\n      <Slider {...settings}>\r\n        {state.movieArr &&\r\n          state.movieArr[0] &&\r\n          // state.movieArr[0].poster_path &&\r\n          state.movieArr[0].backdrop_path &&\r\n          state.movieArr.map(\r\n            (movie: PopularMovie) =>\r\n              movie.backdrop_path !==\r\n                process.env.PUBLIC_URL + \"/img/no_image.png\" && (\r\n                <Slid oneMovie={movie} key={movie.id} />\r\n              )\r\n          )}\r\n      </Slider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainSlider;\r\n","// import React, { Suspense } from \"react\";\r\nimport React from \"react\";\r\nimport Layout from \"../components/Layout\";\r\n\r\nimport MoviesList from \"../components/movies-list/MoviesList\";\r\nimport MainSlider from \"../components/slider/MainSlider\";\r\n// const MovieListLazy = React.lazy(() => import(\"./movies-list/MoviesList\"));\r\n\r\ninterface Props {}\r\n\r\nconst Home: React.FC<Props> = () => {\r\n  return (\r\n    // <div className=\"mt-4 pt-3\">\r\n    <Layout>\r\n      <div>\r\n        {/* <Suspense\r\n        fallback={\r\n          <div className=\"text-danger bg-light\">\r\n            Looooooooooooding !!!!!!!!!!\r\n          </div>\r\n        }\r\n      > */}\r\n        <MainSlider />\r\n        {/* <MovieListLazy /> */}\r\n        {/* </Suspense> */}\r\n        <MoviesList />\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Layout from \"../components/Layout\";\r\n\r\ninterface Props {}\r\n\r\nconst About: React.FC<Props> = () => {\r\n  return (\r\n    <Layout>\r\n      <div\r\n        className=\"container-fluid about-container text-center bg-dark font-weight-bold text-light\"\r\n        style={{ height: \"100vh\" }}\r\n      >\r\n        <div className=\"row h-100 border border-light border my-auto\">\r\n          <div className=\"col-12 d-flex flex-column justify-content-center align-items-center\">\r\n            <p style={{ width: \"75%\" }} className=\"about-text\">\r\n              this website is meant to give the user enough information to\r\n              decide whether if a movie is worth watching from the user\r\n              perspective, by providing the user with information related to the\r\n              movie like the (actors, directors, overview, release-date ,\r\n              Ratings ...) and movie images and trailers, by using the public\r\n              APIs from TMDB and OMDB\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { useState, useEffect } from \"react\";\r\nimport usePrepareMoviesArr from \"./usePrepareMoviesArr\";\r\n\r\n// Our hook\r\nexport default function useDebouncedSearch(value: any, delay: number) {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n  const [sortedArr, setSortedArr] = usePrepareMoviesArr([]);\r\n\r\n  const searchMovie = async (searchTerm: string) => {\r\n    const search_url = `https://api.themoviedb.org/3/search/multi?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&query=${searchTerm}&page=1&include_adult=false`;\r\n\r\n    const response = await fetch(search_url);\r\n    const data = await response.json();\r\n    // console.log({ data });\r\n\r\n    return data;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n    if (debouncedValue) {\r\n      searchMovie(debouncedValue).then((data: any) => {\r\n        setSortedArr(data);\r\n        // console.log(\"kdkdkd\", { data });\r\n      });\r\n    } else {\r\n      setSortedArr([]);\r\n    }\r\n    //   }, [value]);\r\n  }, [debouncedValue]);\r\n\r\n  //   return debouncedValue;\r\n  return sortedArr;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport Movie from \"../components/movies-list/Movie\";\r\nimport { PopularMovie } from \"../model/PopularMovie\";\r\nimport useDebouncedSearch from \"../hooks/useDebouncedSearch\";\r\nimport Layout from \"../components/Layout\";\r\n\r\ninterface Props extends RouteComponentProps<{ keyword: string }> {}\r\n\r\nconst SearchResults: React.FC<Props> = ({ match }) => {\r\n  // console.log({ match });\r\n  // console.log(match.params.keyword.substring(1));\r\n\r\n  const [movieArr, setMovieArr] = useState([]);\r\n  const searchTerm = match.params.keyword.substring(1);\r\n  const sortedFromDebounced = useDebouncedSearch(searchTerm, 500);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const xArr = localStorage.getItem(\"search-bar-arr\");\r\n      // if (xArr === \"\") {\r\n      if (xArr) {\r\n        const xArrParsed = JSON.parse(xArr);\r\n\r\n        if (xArrParsed.length > 0) {\r\n          setMovieArr(xArrParsed);\r\n        }\r\n      }\r\n      if (xArr === null) {\r\n        // make a fetch\r\n        setMovieArr(sortedFromDebounced);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error in useEffect, first block!!\");\r\n    }\r\n\r\n    window.onunload = () => window.localStorage.removeItem(\"search-bar-arr\");\r\n    return () => {\r\n      localStorage.removeItem(\"search-bar-arr\");\r\n    };\r\n  }, [match, sortedFromDebounced]);\r\n\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <div className=\"container text-light mt-5\">\r\n          {match.params && match.params.keyword && (\r\n            <h1>\r\n              Result for: {match.params.keyword.substring(1).toUpperCase()}{\" \"}\r\n            </h1>\r\n          )}\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              {movieArr &&\r\n                movieArr.map((x: PopularMovie) => (\r\n                  <div\r\n                    className=\"col  m-2 p-0 d-flex align-items-stretch justify-content-center\"\r\n                    key={x.id}\r\n                  >\r\n                    <Movie oneMovie={x} key={x.id} />\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React from \"react\";\r\nimport Layout from \"../components/Layout\";\r\n\r\ninterface Props {}\r\n\r\nconst ViewAll: React.FC<Props> = () => {\r\n  return (\r\n    <Layout>\r\n      <div style={{ color: \"white\" }}>\r\n        <h1>Allllll </h1>\r\n        <h1>Allllll </h1>\r\n        <h1>Allllll </h1>\r\n        <h1>Allllll </h1>\r\n        <h1>Allllll </h1>\r\n        <h1>Allllll </h1>\r\n        <h1>Allllll </h1>\r\n        <h1>Allllll </h1>\r\n        <h1>Allllll </h1>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ViewAll;\r\n","import React, { ReactElement } from \"react\";\r\nimport Layout from \"../components/Layout\";\r\n\r\n// interface Props {}\r\n\r\n// export default function NotFound({}: Props): ReactElement {\r\nexport default function NotFound(): ReactElement {\r\n  return (\r\n    <Layout>\r\n      <div\r\n        className=\"container-fluid text-center bg-dark font-weight-bold text-light\"\r\n        style={{ height: \"100vh\" }}\r\n      >\r\n        <div className=\"row h-100  my-auto\">\r\n          <div className=\"col-12  d-flex flex-column justify-content-center\">\r\n            <p className=\"display-1\">404</p>\r\n            <p>Not Found...!!!!! </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","//\r\nconst TMDB_KEY = \"0080b388d26799f530961ac46923ae6a\";\r\n\r\nexport const useURL = (kind: string, movieId: any) => {\r\n  //\r\n  const url =\r\n    kind === \"film\"\r\n      ? // ? `https://api.themoviedb.org/3/movie/${movieId}?api_key=${process.env.REACT_APP_TMDB_KEY}&append_to_response=videos,images,credits,external_ids&include_image_language=en,null`\r\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=${TMDB_KEY}&append_to_response=videos,images,credits,external_ids&include_image_language=en,null`\r\n      : `https://api.themoviedb.org/3/tv/${movieId}?api_key=${TMDB_KEY}&append_to_response=videos,images,credits,external_ids&include_image_language=en,null`;\r\n\r\n  return { url };\r\n};\r\n// append_to_response=videos,images,credits,external_ids\r\n","import { useState, useEffect } from \"react\";\r\nimport { ICombined } from \"../model/combined\";\r\nimport { basePosterUrl } from \"../urls_and_keys\";\r\n\r\ntype Hook = (\r\n  tmdb_url: string,\r\n  key: string\r\n) => [ICombined, boolean, string | null];\r\n\r\nconst useFetchOrSession: Hook = (tmdb_url: string, key: string) => {\r\n  const [data, setData] = useState<ICombined>({} as ICombined);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const fetchData = async (url: string) => {\r\n    const response = await fetch(url);\r\n    const json = await response.json();\r\n    // console.log(\"json\", json);\r\n\r\n    return json;\r\n  };\r\n\r\n  const nestedFetch = async () => {\r\n    // console.log(\"nestedFetchchchchchchchch is called \");\r\n\r\n    setIsLoading(true);\r\n    let combined: any = {};\r\n    try {\r\n      const tmdb_data = await fetchData(tmdb_url);\r\n      // const tmdb_data = await fetchData(\"www.omdbapi.com\");\r\n      const imdb_id = tmdb_data.external_ids.imdb_id;\r\n      // console.log(\"nested Fetch\", imdb_id);\r\n\r\n      if (imdb_id) {\r\n        const omdb_url = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_OMDB_KEY}&i=${imdb_id}&plot=full`;\r\n\r\n        try {\r\n          const omdb_data = await fetchData(omdb_url);\r\n          combined = { ...tmdb_data, ...omdb_data };\r\n\r\n          sortCombinedData(combined);\r\n        } catch (error) {\r\n          console.log(\"error\");\r\n        }\r\n      } else {\r\n        // if there is no imdb => then we can't fetch the data from OMDB api\r\n        combined = { ...tmdb_data };\r\n        sortCombinedData(combined);\r\n      }\r\n    } catch (error) {\r\n      setError(error);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const sortCombinedData = (combined: any) => {\r\n    // console.log(\"combined \", combined);\r\n\r\n    const sortedCombined = {\r\n      imdb_id: combined.imdb_id,\r\n      id: combined.id,\r\n      title: combined.title ? combined.title : combined.name,\r\n      number_of_episodes: combined.number_of_episodes,\r\n      number_of_seasons: combined.number_of_seasons,\r\n      release_date: combined.release_date\r\n        ? combined.release_date\r\n        : combined.first_air_date,\r\n      poster_path: combined.poster_path\r\n        ? `${basePosterUrl}w780${combined.poster_path}`\r\n        : `${process.env.PUBLIC_URL}/img/no_image.png`,\r\n      backdrop_path: combined.backdrop_path\r\n        ? `${basePosterUrl}w780${combined.backdrop_path}`\r\n        : `${process.env.PUBLIC_URL}/img/no_image.png`,\r\n      overview: combined.overview,\r\n      // credits: { cast: any[] };\r\n      credits: combined.credits,\r\n      budget: combined.budget,\r\n      // videos: { results: any[] };\r\n      // videos: combined.videos.results,\r\n      videos: combined.videos,\r\n      // images: { backdrops: any[]; posters: any[] };\r\n      images: combined.images,\r\n      //\r\n      Genre: combined.Genre,\r\n      Director: combined.Director,\r\n      Writer: combined.Writer,\r\n      Actors: combined.Actors,\r\n      Country: combined.Country,\r\n      Awards: combined.Awards,\r\n      // Ratings: { Source: string; Value: string }[];\r\n      Ratings: combined.Ratings,\r\n      imdbRating: combined.imdbRating,\r\n      Production: combined.Production,\r\n      Runtime: combined.Runtime,\r\n    };\r\n    // todo: restore the data in the local-session after the refactoring and restructuring the code\r\n    // sessionStorage.setItem(key, JSON.stringify(sortedCombined));\r\n    setData(sortedCombined);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // make the test fail to not store >> temporary till the restructure !\r\n    // todo: make the localCheck work again after the refactoring and restructuring the code\r\n    // const localCheck = sessionStorage.getItem(key);\r\n    const localCheck = false;\r\n\r\n    if (localCheck) {\r\n      // if (false) {\r\n      console.log(\"there is local Storage search-bar-arr\", key);\r\n      // sendData();\r\n      setData(JSON.parse(localCheck));\r\n      setIsLoading(false);\r\n    }\r\n    if (!localCheck) {\r\n      // console.log(\"1111\");\r\n      console.log(\"noooooo local for search-bar-arr\", localCheck);\r\n      nestedFetch();\r\n    }\r\n  }, [tmdb_url]);\r\n\r\n  return [data, isLoading, error];\r\n};\r\n\r\nexport default useFetchOrSession;\r\n","import React from \"react\";\r\n\r\ninterface ICast {\r\n  character: string;\r\n  name: string;\r\n  profile_path: string;\r\n}\r\ninterface Props {\r\n  cast: ICast[];\r\n  actors: string;\r\n}\r\n\r\nconst Credits: React.FC<Props> = ({ cast, actors }) => {\r\n  // console.log(\"cart\", cast);\r\n  // console.log(\"actors\", actors);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {cast && cast.length === 0 && actors && actors !== \"N/A\" && (\r\n          <>\r\n            <span className=\"h3\">The Cast: </span> {actors}\r\n          </>\r\n        )}\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            {cast.map((member: ICast, index: number) => {\r\n              const imgSrc = member.profile_path\r\n                ? // ? `https://image.tmdb.org/t/p/original${member.profile_path}`\r\n                  // `https://image.tmdb.org/t/p/w92/${member.profile_path}`\r\n                  `https://image.tmdb.org/t/p/w185/${member.profile_path}`\r\n                : `${process.env.PUBLIC_URL}/img/no_image.png`;\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className=\"cast-container clo col-6 col-sm-4 col-md-3 p-0 border d-flex align-items-stretch\"\r\n                >\r\n                  <div className=\"cast text-center\">\r\n                    <div className=\"cast__img-container\">\r\n                      <img src={imgSrc} alt={member.name} />\r\n                    </div>\r\n                    <div className=\"cast__character\">\r\n                      <span className=\"lead\">{member.name} </span>\r\n                      <br />\r\n                      <span className=\"\">{member.character} </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>{\" \"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Credits;\r\n","import React, { MouseEvent } from \"react\";\r\nimport { basePosterUrl } from \"../../urls_and_keys\";\r\n\r\ninterface Props {\r\n  image: {\r\n    file_path: string;\r\n  };\r\n  length: number;\r\n  //   openOverlay: (event: MouseEvent<HTMLButtonElement>) => void;\r\n  openOverlay: (event: MouseEvent<HTMLImageElement>) => void;\r\n}\r\n\r\nconst MovieImages: React.FC<Props> = ({ image, length, openOverlay }) => {\r\n  const openModal = (e: MouseEvent<HTMLImageElement>) => {\r\n    openOverlay(e);\r\n  };\r\n  return (\r\n    <div>\r\n      <img\r\n        onClick={openModal}\r\n        src={`${basePosterUrl}w1280${image.file_path}`}\r\n        style={{ width: \"100%\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieImages;\r\n","import React, { useRef, MouseEvent, useState, useEffect } from \"react\";\r\nimport Slider from \"react-slick\";\r\n// import { basePosterUrl } from \"../urls_and_keys\";\r\nimport MovieImages from \"./MovieImages\";\r\ninterface Props {\r\n  images: {\r\n    backdrops: { file_path: string }[];\r\n    posters: { file_path: string }[];\r\n  };\r\n}\r\n\r\nconst ImagesSlide: React.FC<Props> = ({ images: { backdrops } }) => {\r\n  const [imageSrc, setImageSrc] = useState(\"\");\r\n  const [showOverlay, setShowOverlay] = useState(false);\r\n  const overlayRef = useRef<any>();\r\n\r\n  const openOverlay = (event: MouseEvent<HTMLImageElement>) => {\r\n    setImageSrc(event.currentTarget.src);\r\n    setShowOverlay(true);\r\n  };\r\n\r\n  const overlayClickHandler = (e: MouseEvent) => {\r\n    if (e.target === overlayRef.current) {\r\n      setShowOverlay(false);\r\n    }\r\n  };\r\n\r\n  let settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    initialSlide: 1,\r\n\r\n    // className: \"center\",\r\n    // centerMode: true,\r\n\r\n    // slidesToShow: 1,\r\n    slidesToShow: 3,\r\n    // centerPadding: \"60px\",\r\n    // lazyLoad: true,\r\n    slidesToScroll: 3,\r\n    // autoplay: true,\r\n    autoplay: false,\r\n    // speed: 2000,\r\n    autoplaySpeed: 2000,\r\n    // autoplaySpeed: 1500\r\n    // cssEase: \"linear\"\r\n    pauseOnHover: false,\r\n\r\n    responsive: [\r\n      {\r\n        breakpoint: 768,\r\n        settings: {\r\n          className: \"center\",\r\n          centerMode: true,\r\n          dots: false,\r\n          arrows: false,\r\n          slidesToShow: 2,\r\n          infinite: true,\r\n          slidesToScroll: 1,\r\n          swipeToSlide: true\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          dots: false,\r\n          className: \"center\",\r\n          centerMode: true,\r\n          arrows: false,\r\n          slidesToShow: 1,\r\n          infinite: true,\r\n          slidesToScroll: 1,\r\n          swipeToSlide: true\r\n        }\r\n      }\r\n      // {\r\n      //   breakpoint: 992,\r\n      //   settings: \"unslick\"\r\n      // }\r\n    ]\r\n  };\r\n  return (\r\n    <div className=\"ImagesSlide mb-4\">\r\n      <Slider {...settings}>\r\n        {backdrops.map((image: any, index: number) => (\r\n          <MovieImages\r\n            image={image}\r\n            key={index}\r\n            openOverlay={openOverlay}\r\n            length={backdrops.length}\r\n          />\r\n        ))}\r\n      </Slider>\r\n      {showOverlay ? (\r\n        <>\r\n          <div\r\n            className=\"overlay\"\r\n            onClick={overlayClickHandler}\r\n            ref={overlayRef}\r\n          >\r\n            <button\r\n              onClick={() => setShowOverlay(false)}\r\n              type=\"button\"\r\n              className=\"close\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n            <div className=\"overlay__image-container\">\r\n              <img src={imageSrc} />\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImagesSlide;\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\ninterface Props {\r\n  video: {\r\n    name: string;\r\n    key: string;\r\n    id: string;\r\n    type: string;\r\n  };\r\n  index: number;\r\n}\r\n\r\nconst MovieVideos: React.FC<Props> = ({ video, index }) => {\r\n  const videoSrc = \"https://www.youtube.com/embed/\" + video.key;\r\n\r\n  const iframeRef = useRef<any>(null);\r\n  const modalRef = useRef<any>(null);\r\n\r\n  const playVideo = () => {\r\n    iframeRef.current.src = videoSrc;\r\n  };\r\n\r\n  const stopVideo = () => {\r\n    iframeRef.current.src = iframeRef.current.src;\r\n  };\r\n\r\n  useEffect(() => {\r\n    modalRef.current.addEventListener(\"click\", stopVideo);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-6 d-flex align-items-center  border-bottom\">\r\n            {video.name}\r\n          </div>\r\n          <div className=\"col d-flex align-items-center justify-content-center p-1\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary trailer-button\"\r\n              data-toggle=\"modal\"\r\n              data-target={\"#\" + \"trailer\" + index.toString()}\r\n              onClick={playVideo}\r\n            >\r\n              Watch Trailer\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"modal fade bd-example-modal-lg\"\r\n        id={\"trailer\" + index.toString()}\r\n        ref={modalRef}\r\n        tabIndex={-1}\r\n        role=\"dialog\"\r\n        aria-labelledby=\"myLargeModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">\r\n                {video.name}\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n                onClick={stopVideo}\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>{\" \"}\r\n            <div className=\"embed-responsive embed-responsive-16by9\">\r\n              <iframe\r\n                ref={iframeRef}\r\n                className=\"embed-responsive-item\"\r\n                src={\"\"}\r\n                allowFullScreen\r\n              ></iframe>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieVideos;\r\n","import React from \"react\";\r\n// import { PopularMovie } from \"../../model/PopularMovie\";\r\nimport { ICombined } from \"../../model/combined\";\r\n\r\ninterface Props {\r\n  combinedFetch: ICombined;\r\n}\r\n\r\nconst BasicDetails: React.FC<Props> = ({\r\n  combinedFetch: {\r\n    poster_path,\r\n    title,\r\n    release_date,\r\n    overview,\r\n    budget,\r\n    Genre,\r\n    Director,\r\n    Writer,\r\n    number_of_episodes,\r\n    number_of_seasons,\r\n    // Actors,\r\n    Country,\r\n    Awards,\r\n    Ratings,\r\n    imdbRating,\r\n    Production,\r\n    Runtime,\r\n\r\n    //\r\n  },\r\n}) => {\r\n  let budgetFormat = budget\r\n    ? new Intl.NumberFormat().format(budget)\r\n    : undefined;\r\n  let RottenTomato: string = \"\";\r\n\r\n  if (Ratings && Ratings.length > 0) {\r\n    Ratings.map((Rat) => {\r\n      if (Rat.Source === \"Rotten Tomatoes\") {\r\n        RottenTomato = Rat.Value;\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"basic-info-container\">\r\n      <div className=\"container-fluid basic-info\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-5 pt-4 text-center\">\r\n            <img className=\"basic-info__image\" src={poster_path} alt={title} />\r\n          </div>\r\n          <div className=\"col mt-3 mt-md-0 pt-4\">\r\n            {release_date && (\r\n              <>\r\n                <span>Release Date:</span> {release_date}\r\n                <br />\r\n              </>\r\n            )}\r\n\r\n            {Genre && Genre !== \"N/A\" && (\r\n              <>\r\n                {\" \"}\r\n                <span>Genres:</span> {Genre}\r\n                <br />\r\n              </>\r\n            )}\r\n            {Runtime && Runtime !== \"N/A\" && (\r\n              <>\r\n                {\" \"}\r\n                <span>Runtime:</span> {Runtime}\r\n                <br />\r\n              </>\r\n            )}\r\n            {number_of_episodes && number_of_episodes !== undefined && (\r\n              <>\r\n                {\" \"}\r\n                <span>Number Of Episodes:</span> {number_of_episodes}\r\n                <br />\r\n              </>\r\n            )}\r\n            {number_of_seasons && number_of_seasons !== undefined && (\r\n              <>\r\n                {\" \"}\r\n                <span>Number Of Seasons:</span> {number_of_seasons}\r\n                <br />\r\n              </>\r\n            )}\r\n\r\n            {budgetFormat && (\r\n              <>\r\n                <span>Budget:</span> {budgetFormat} <br />\r\n              </>\r\n            )}\r\n            {Director && Director !== \"N/A\" && (\r\n              <>\r\n                <span>Director:</span> {Director} <br />\r\n              </>\r\n            )}\r\n            {Writer && Writer !== \"N/A\" && (\r\n              <>\r\n                <span>Writer:</span> {Writer} <br />\r\n              </>\r\n            )}\r\n            {Country && Country !== \"N/A\" && (\r\n              <>\r\n                <span>Country:</span> {Country} <br />\r\n              </>\r\n            )}\r\n            {Awards && Awards !== \"N/A\" && (\r\n              <>\r\n                <span>Awards:</span> {Awards} <br />\r\n              </>\r\n            )}\r\n            {Production && Production !== \"N/A\" && (\r\n              <>\r\n                <span>Production:</span> {Production} <br />\r\n              </>\r\n            )}\r\n            {imdbRating && imdbRating !== \"N/A\" && (\r\n              <>\r\n                <span>IMDB: </span>\r\n                {imdbRating} <br />\r\n              </>\r\n            )}\r\n            {RottenTomato !== \"\" && RottenTomato !== \"N/A\" && (\r\n              <p>\r\n                <span>Rotten Tomatoes:</span> {RottenTomato}{\" \"}\r\n              </p>\r\n            )}\r\n            {overview && (\r\n              <p>\r\n                <span>Overview:</span> {overview}{\" \"}\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BasicDetails;\r\n","import React, { useEffect } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n// import { useURL } from \"../../hooks/useURL\";\r\nimport { useURL } from \"../hooks/useURL\";\r\n// import useCombineFetch from \"../../hooks/useCombineFetch\";\r\n// import useFetchOrSession from \"../../hooks/useFetchOrSession\";\r\nimport useFetchOrSession from \"../hooks/useFetchOrSession\";\r\n// import Credits from \"./Credits\";\r\nimport Credits from \"../components/movie-details/Credits\";\r\n// import ImagesSlide from \"../ImagesSlide\";\r\nimport ImagesSlide from \"../components/movie-details/ImagesSlide\";\r\n// import MovieVideos from \"../MovieVideos\";\r\nimport MovieVideos from \"../components/movie-details/MovieVideos\";\r\n// import BasicDetails from \"./BasicDetails\";\r\nimport BasicDetails from \"../components/movie-details/BasicDetails\";\r\nimport Layout from \"../components/Layout\";\r\n// import useLocalStorage from \"../../hooks/useLocalStorage\";\r\n// import useSessionStorage from \"../../hooks/useSessionStorage\";\r\n\r\ninterface Props\r\n  extends RouteComponentProps<{ id: string; kind: string; title: string }> {}\r\n\r\nconst MovieDetails: React.FC<Props> = ({ match }) => {\r\n  //\r\n  const { id, kind, title } = match.params;\r\n\r\n  const sessionStorageName: string = \"movie-details22\";\r\n\r\n  const { url } = useURL(kind, id);\r\n\r\n  // const [combinedFetch] = useCombineFetch(url);\r\n  // const [combinedFetch2] = useCombineFetch2(url, localStorageCustomName);\r\n  // const [storageValue, isLoading, error] = useCombineFetch2(\r\n  const [movieDetails, isLoading, error] = useFetchOrSession(\r\n    url,\r\n    sessionStorageName\r\n  );\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // todo: removie the sessionStorageName after the refactoring and restructuring the code\r\n      // sessionStorage.removeItem(sessionStorageName);\r\n    };\r\n  }, []);\r\n  // console.log(\"movieDetails\", movieDetails);\r\n\r\n  let trailers: any;\r\n  let images: any;\r\n  if (movieDetails) {\r\n    if (!movieDetails?.videos || movieDetails?.videos?.results.length === 0) {\r\n      // trailers = <h3>No Videos Found! </h3>;\r\n      trailers = (\r\n        <div className=\"container\">\r\n          <p className=\"trailer-available\"> No Related Videos Found! </p>{\" \"}\r\n        </div>\r\n      );\r\n    } else {\r\n      trailers = movieDetails.videos.results.map(\r\n        (video: any, index: number) => (\r\n          <MovieVideos video={video} key={index} index={index} />\r\n        )\r\n      );\r\n    }\r\n\r\n    if (!movieDetails?.images || !movieDetails?.images?.backdrops) {\r\n      images = <h3>No Images Found </h3>;\r\n    } else {\r\n      images = <ImagesSlide images={movieDetails.images} />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"movie-details-container  px-sm-5 pb-5\">\r\n        <div id=\"accordion\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\" id=\"headingOne\">\r\n              <h5 className=\"mb-0\">\r\n                <button\r\n                  className=\"btn btn-link\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\"#collapseOne\"\r\n                  aria-expanded=\"true\"\r\n                  aria-controls=\"collapseOne\"\r\n                >\r\n                  Movie Details\r\n                </button>\r\n              </h5>\r\n            </div>\r\n\r\n            <div\r\n              id=\"collapseOne\"\r\n              className=\"collapse show\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-parent=\"#accordion\"\r\n            >\r\n              <div className=\"card-body\">\r\n                <div className=\"container-fluid\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12  text-center border border-red\">\r\n                      <p className=\"h1 my-3 movie-detail__title\">\r\n                        {title.split(\"-\").join(\" \")}{\" \"}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {isLoading && <h1>Loading ............</h1>}\r\n                {error && (\r\n                  <h3>\r\n                    {`:(`} <br /> it seems like something went wrong!{\" \"}\r\n                  </h3>\r\n                )}\r\n                {!isLoading && <BasicDetails combinedFetch={movieDetails} />}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\" id=\"headingTwo\">\r\n              <h5 className=\"mb-0\">\r\n                <button\r\n                  className=\"btn btn-link collapsed\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\"#collapseTwo\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"collapseTwo\"\r\n                >\r\n                  Media (Images and Videos)\r\n                </button>\r\n              </h5>\r\n            </div>\r\n            <div\r\n              id=\"collapseTwo\"\r\n              className=\"collapse\"\r\n              aria-labelledby=\"headingTwo\"\r\n              data-parent=\"#accordion\"\r\n            >\r\n              {images}\r\n\r\n              {movieDetails?.videos?.results.length > 0 && (\r\n                <div className=\"container\">\r\n                  <p className=\"trailer-available\">Available Trailers:</p>{\" \"}\r\n                </div>\r\n              )}\r\n              {trailers}\r\n            </div>\r\n          </div>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\" id=\"headingThree\">\r\n              <h5 className=\"mb-0\">\r\n                <button\r\n                  className=\"btn btn-link collapsed\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\"#collapseThree\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"collapseThree\"\r\n                >\r\n                  Credits: The Cast....\r\n                </button>\r\n              </h5>\r\n            </div>\r\n            <div\r\n              id=\"collapseThree\"\r\n              className=\"collapse\"\r\n              aria-labelledby=\"headingThree\"\r\n              data-parent=\"#accordion\"\r\n            >\r\n              <div className=\"card-body\">\r\n                {movieDetails && Object.keys(movieDetails).length === 0 && (\r\n                  <h1>No Actors Found</h1>\r\n                )}\r\n                {movieDetails.Actors === \"N/A\" && (\r\n                  <p>\r\n                    unfortunately, we couldn't find information related to the\r\n                    Actors {`:(`}{\" \"}\r\n                  </p>\r\n                )}\r\n                {movieDetails && movieDetails.credits && (\r\n                  <div className=\"container mt-4\">\r\n                    <Credits\r\n                      cast={movieDetails.credits.cast}\r\n                      actors={movieDetails.Actors}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PopularMovie } from \"../../model/PopularMovie\";\r\n\r\ninterface Props {\r\n  movie: PopularMovie;\r\n}\r\n\r\nconst Suggestion: React.FC<Props> = ({ movie }) => {\r\n  //\r\n  const kind: string = movie.isMovie ? \"film\" : \"tv-show\";\r\n  // console.log(\"the movie infors: \", movie);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"suggestions__item d-flex border bg-white\">\r\n        <img src={movie.poster_path} className=\"suggestions__item__image\" />\r\n\r\n        <div className=\"suggestions__item__info pl-2\">\r\n          <Link\r\n            to={{\r\n              // pathname: `/movie/${movie.id}/${movie.title\r\n              // /details/${kind}\r\n              pathname: `/details/${kind}/${movie.id}/${movie.title\r\n                .split(\" \")\r\n                .join(\"-\")}`,\r\n              // pathname: `/details/${kind}/${id}/${title.split(\" \").join(\"-\")}`,\r\n              state: {\r\n                movie: JSON.stringify(movie),\r\n              },\r\n            }}\r\n          >\r\n            <p className=\"suggestions__item__info__title m-0  font-weight-bold\">\r\n              {movie.title}\r\n            </p>\r\n          </Link>\r\n          <p className=\"suggestions__item__info__year m-0 text-muted\">\r\n            Release: {movie.release_date}\r\n          </p>\r\n          <p className=\"suggestions__item__info__genres m-0 text-muted\">\r\n            {movie.Genres}{\" \"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Suggestion;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useLocalStorage = (key: any, initialValue: any) => {\r\n  //\r\n  const [local, setLocal] = useState(() => {\r\n    try {\r\n      return JSON.parse(\r\n        window.localStorage.getItem(key) || JSON.stringify(initialValue)\r\n        // *\r\n        // window.sessionStorage.getItem(key) || JSON.stringify(initialValue)\r\n      );\r\n    } catch (error) {\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(local));\r\n    //*\r\n    // window.sessionStorage.setItem(key, JSON.stringify(local));\r\n  }, [local]);\r\n\r\n  return [local, setLocal];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Suggestion from \"./Suggestion\";\r\nimport useDebouncedSearch from \"../../hooks/useDebouncedSearch\";\r\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\r\n\r\ninterface Props {}\r\n\r\nconst MainNav: React.FC<Props> = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  const searchRef = React.useRef<any>(null);\r\n  const sortedArr = useDebouncedSearch(searchTerm, 500);\r\n  const [searchBoxArr, setSearchBoxArr] = useLocalStorage(\r\n    \"search-bar-arr\",\r\n    sortedArr\r\n  );\r\n\r\n  function handleClick(e: any) {\r\n    const clickedElement = e.target;\r\n\r\n    const clickedButton = clickedElement.closest(\".suggestions__button\");\r\n    const clickedSearchBox = clickedElement.closest(\".search-box\");\r\n    const clickedSuggestions = clickedElement.closest(\".suggestions\");\r\n    const clickedTitle = clickedElement.closest(\r\n      \".suggestions__item__info__title\"\r\n    );\r\n\r\n    if (clickedTitle) {\r\n      setShowSuggestions(false);\r\n      searchRef.current.value = \"\";\r\n\r\n      return;\r\n    }\r\n\r\n    if (clickedButton) {\r\n      setShowSuggestions(false);\r\n      searchRef.current.value = \"\";\r\n    }\r\n\r\n    if (!clickedSearchBox && !clickedSuggestions) {\r\n      setShowSuggestions(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (sortedArr.length > 0) {\r\n      setSearchBoxArr(sortedArr);\r\n    }\r\n    // return () => localStorage.removeItem(\"search-bar-arr\");\r\n  }, [sortedArr]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"click\", handleClick);\r\n\r\n    return () => window.removeEventListener(\"click\", handleClick);\r\n  }, []);\r\n\r\n  // %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n\r\n  return (\r\n    <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark\">\r\n      <div className=\"container\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Movie Catalog\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarsExample07\"\r\n          aria-controls=\"navbarsExample07\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarsExample07\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                About <span className=\"sr-only\">(current)</span>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <form className=\"form-inline my-2 my-md-0 search-form form-group\">\r\n            <input\r\n              ref={searchRef}\r\n              onChange={e => {\r\n                e.target.value === \"\"\r\n                  ? setShowSuggestions(false)\r\n                  : setShowSuggestions(true);\r\n\r\n                setSearchTerm(e.target.value);\r\n              }}\r\n              className=\"form-control w-100 search-box\"\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n\r\n            <div\r\n              className=\"suggestions rounded\"\r\n              onClick={() => setShowSuggestions(true)}\r\n            >\r\n              {showSuggestions &&\r\n                sortedArr &&\r\n                sortedArr\r\n                  .slice(0, 5)\r\n                  .map((movie: any, index: number) => (\r\n                    <Suggestion movie={movie} key={index} />\r\n                  ))}\r\n\r\n              {showSuggestions && sortedArr.length !== 0 && (\r\n                <Link\r\n                  to={{\r\n                    // pathname: `/search?keyword=${searchRef.current.value\r\n                    pathname: `/search/keyword=${searchRef.current.value\r\n                      .split(\" \")\r\n                      .join(\"-\")}`,\r\n                    state: {\r\n                      searchedMovies: JSON.stringify(sortedArr),\r\n                      keyword: searchRef.current.value\r\n                    }\r\n                  }}\r\n                >\r\n                  <button className=\"suggestions__button btn btn-primary btn-block border\">\r\n                    View All\r\n                  </button>\r\n                </Link>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default MainNav;\r\n","import React, { useReducer } from \"react\";\nimport { movieReducer, initialState } from \"./appState/movieReducer\";\nimport { Actions } from \"./appState/movieActions\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ScrollToTop from \"./ScrollTop\";\n\n// ##########\nimport {\n  Home,\n  About,\n  SearchResults,\n  ViewAll,\n  NotFound,\n  MovieDetails,\n} from \"./pages\";\n\n// ##########\nimport \"./App.scss\";\nimport MainNav from \"./components/navbar/MainNav\";\n// import MovieDetails from \"./pages/MovieDetails\";\n// import MovieDetails from \"./components/movie-details/MovieDetails\";\nimport FirstGraphqlCom from \"./graphComp/firstGraphqlCom\";\n\nexport type StoreApi = {\n  state: typeof initialState;\n  dispatch: React.Dispatch<Actions>;\n  // dispatch: React.Dispatch<any>;\n};\n\nexport const MoviesContext = React.createContext<\n  StoreApi | typeof initialState\n>(initialState);\n\nconst App: React.FC = () => {\n  const [state, dispatch] = useReducer(movieReducer, initialState);\n\n  return (\n    <div className=\"app min-vh-100\">\n      {/* <div className=\"app \"> */}\n      <MoviesContext.Provider value={{ state, dispatch } as StoreApi}>\n        {/* <Router basename=\"/movie-catalog\"> */}\n        <Router basename={process.env.PUBLIC_URL}>\n          {/* <Router> */}\n          <ScrollToTop />\n          <MainNav />\n          {/* <FirstGraphqlCom />\n          <FirstGraphqlCom />\n          <FirstGraphqlCom />\n          <FirstGraphqlCom /> */}\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/results\" component={SearchResults} />\n            <Route exact path=\"/viewall\" component={ViewAll} />\n            <Route\n              exact\n              path=\"/details/:kind/:id/:title\"\n              component={MovieDetails}\n            />\n\n            <Route\n              exact\n              // path=\"/search?keyword:keyword\"\n              path=\"/search/keyword:keyword\"\n              component={SearchResults}\n            />\n            <Route path=\"/\" render={NotFound} />\n          </Switch>\n        </Router>\n      </MoviesContext.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// https://movie-catalog-backend-api.herokuapp.com/graphql\r\n\r\nconst prod = {\r\n  url: {\r\n    API_URL: \"https://movie-catalog-backend-api.herokuapp.com/graphql\",\r\n    // API_URL_USERS: \"https://myapp.herokuapp.com/users\",\r\n  },\r\n};\r\nconst dev = {\r\n  url: {\r\n    API_URL: \"http://localhost:5000/graphql\",\r\n  },\r\n};\r\n\r\n// export const config = process.env.NODE_ENV === \"development\" ? dev : prod;\r\nconst config = process.env.REACT_APP_STAGE === \"production\" ? prod : dev;\r\n\r\nexport default {\r\n  // Add common config values here\r\n  //   MAX_ATTACHMENT_SIZE: 5000000,\r\n  ...config,\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { ApolloProvider } from \"@apollo/client\";\n\nimport config from \"./config\";\nconst client = new ApolloClient({\n  uri: config.url.API_URL,\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}