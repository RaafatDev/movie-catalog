{"version":3,"sources":["appState/movieReducer.tsx","ScrollTop.tsx","graphql/fragments/fragmentBasicDetail.ts","graphql/queries/querySearchList.ts","graphql/queries/queryMovieList.ts","graphql/queries/queryTVShowList.ts","graphql/queries/queryMovieDetail.ts","components/layout/Footer.tsx","styled-components/globalStyles.ts","components/layout/Layout.tsx","components/movie-details/BasicDetails.tsx","components/movie-details/Credits.tsx","components/movie-details/MovieImages.tsx","components/movie-details/ImagesSlide.tsx","components/movie-details/MovieVideos.tsx","components/movies-list/Movie.tsx","components/movies-list/MoviesList.tsx","components/slider/Slide.tsx","components/slider/MainSlider.tsx","pages/Home.tsx","pages/About.tsx","pages/SearchResults.tsx","hooks/useLocalSessionType.tsx","pages/ViewAll.tsx","pages/NotFound.tsx","pages/MovieDetails.tsx","components/navbar/Suggestion.tsx","components/navbar/LoadingSuggestions.tsx","components/navbar/MainNav.tsx","App.tsx","serviceWorker.ts","config.ts","index.tsx"],"names":["initialState","loading","movieArr","tvShowArr","error","movieReducer","state","action","type","payload","withRouter","history","useEffect","unListen","listen","window","scrollTo","MovieListPage","fragments","basicDetail","gql","QUERY_SEARCH_LIST","QUERY_MOVIES_LIST","QUERY_TV_SHOW_LIST","QUERY_MOVIE_DETAIL","Footer","props","GlobalStyle","createGlobalStyle","Layout","children","BasicDetails","combinedFetch","poster_path","backdrop_path","title","release_date","overview","budget","Genre","Director","Writer","number_of_episodes","number_of_seasons","Country","Awards","Ratings","imdbRating","Production","Runtime","budgetFormat","Intl","NumberFormat","format","undefined","RottenTomato","length","map","Rat","Source","Value","imgSrc","className","src","process","alt","Credits","cast","actors","member","index","profile_path","key","name","character","MovieImages","image","openOverlay","onClick","e","file_path","style","width","ImagesSlide","backdrops","images","useState","imageSrc","setImageSrc","showOverlay","setShowOverlay","overlayRef","useRef","event","currentTarget","settings","dots","infinite","initialSlide","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","pauseOnHover","responsive","breakpoint","centerMode","arrows","swipeToSlide","target","current","ref","aria-label","aria-hidden","MovieVideos","video","videoSrc","iframeRef","modalRef","stopVideo","addEventListener","data-toggle","data-target","toString","id","tabIndex","role","aria-labelledby","data-dismiss","allowFullScreen","StyledCard","styled","div","no_image","StyledTitle","h5","StyledDate","Movie","oneMovie","isMovie","kind","to","pathname","split","join","movie","JSON","stringify","MoviesList","movieList","listType","slice","Slid","Genres","MainSlider","Home","useQuery","movieListLoading","movieListError","movieListData","data","TVShowListLoading","TVShowListError","TVShowListData","TVShowList","About","height","SearchResults","match","location","searchTerm","params","keyword","substring","initialValue","value","localStorage","getItem","parse","setState","setItem","console","log","useLocalSession","localSession","setLocalSession","searchedMovies","x","ViewAll","color","NotFound","MovieDetails","variables","fontSize","trailers","movieDetails","movieDetail","OMDB_MovieDetail","TMDB_MovieDetail","videos","aria-expanded","aria-controls","data-parent","results","Object","keys","Actors","credits","Suggestion","LoadingSuggestions","MainNav","setSearchTerm","showSuggestions","setShowSuggestions","searchRef","React","useDebouncedQuery","handleClick","clickedElement","clickedButton","closest","clickedSearchBox","clickedSuggestions","removeEventListener","onChange","placeholder","searchMovieList","delay","debouncedValue","setDebouncedValue","queriedData","handler","setTimeout","clearTimeout","MoviesContext","createContext","App","useReducer","dispatch","Provider","basename","exact","path","component","render","Boolean","hostname","config","REACT_APP_STAGE","url","API_URL","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15e73dff.chunk.js","sourcesContent":["import { Actions } from \"./movieActions\";\r\n\r\nexport const initialState = {\r\n  loading: false,\r\n  movieArr: [],\r\n  tvShowArr: [],\r\n  error: \"\"\r\n};\r\n\r\nexport type State = {\r\n  loading: boolean;\r\n  movieArr: any[];\r\n  tvShowArr: any[];\r\n  error: string;\r\n};\r\n// export type Actions = MOVIE_REQUEST | fetch | MOVIE_REQUEST_FAILURE | any;\r\nexport const movieReducer = (\r\n  state: State = initialState,\r\n  action: Actions\r\n): State => {\r\n  switch (action.type) {\r\n    case \"MovieRequestSend\":\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n\r\n    case \"TvShowRequestSuccess\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        tvShowArr: action.payload\r\n      };\r\n\r\n    case \"MovieRequestSuccess\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        movieArr: action.payload\r\n      };\r\n\r\n    case \"MovieRequestFailure\":\r\n      return {\r\n        // ...state,\r\n        loading: false,\r\n        movieArr: [],\r\n        tvShowArr: [],\r\n        // error: action.payload\r\n        error: \"something went wrong! \"\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// type MOVIE_REQUEST = {\r\n//   type: \"MOVIE_REQUEST\";\r\n// };\r\n\r\n// type fetch = {\r\n//   type?: \"MOVIE_REQUEST_SUCCESS\";\r\n//   payload?: [];\r\n// };\r\n\r\n// type MOVIE_REQUEST_FAILURE = {\r\n//   type?: \"MOVIE_REQUEST_FAILURE\";\r\n//   payload?: \"\";\r\n// };\r\n","import { useEffect } from \"react\";\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\n\r\ninterface Props extends RouteComponentProps<{ id: string }> {}\r\n// console.log(\"Scroll to top !!!\");\r\n\r\nconst ScrollToTop: React.FC<Props> = ({ history }) => {\r\n  useEffect(() => {\r\n    // console.log(\"use Effect ini Scroll to top !!!\");\r\n\r\n    const unListen = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unListen();\r\n    };\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import { gql } from \"@apollo/client\";\r\n\r\ntype FragmentType = {\r\n  fragments: {\r\n    basicDetail: any;\r\n  };\r\n};\r\n\r\n// let MovieListPage: FragmentType = {};\r\n\r\nexport const MovieListPage: FragmentType = {\r\n  fragments: {\r\n    basicDetail: gql`\r\n      fragment basicDetailFragment on MovieList {\r\n        isMovie\r\n        title\r\n        release_date\r\n        id\r\n        poster_path\r\n        backdrop_path\r\n        overview\r\n        genre_ids\r\n      }\r\n    `,\r\n  },\r\n};\r\n","import { gql } from \"@apollo/client\";\r\nimport { MovieListPage } from \"../fragments/fragmentBasicDetail\";\r\n\r\nexport const QUERY_SEARCH_LIST = gql`\r\n  query FetchSearchList($searchTerm: String) {\r\n    searchMovieList(searchTerm: $searchTerm) {\r\n      ...basicDetailFragment\r\n    }\r\n  }\r\n  ${MovieListPage.fragments.basicDetail}\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nimport { MovieListPage } from \"../fragments/fragmentBasicDetail\";\r\n\r\nexport const QUERY_MOVIES_LIST = gql`\r\n  query FetchMovieList {\r\n    movieList {\r\n      ...basicDetailFragment\r\n    }\r\n  }\r\n  ${MovieListPage.fragments.basicDetail}\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\nimport { MovieListPage } from \"../fragments/fragmentBasicDetail\";\r\n\r\nexport const QUERY_TV_SHOW_LIST = gql`\r\n  query FetchTVShowList {\r\n    TVShowList {\r\n      ...basicDetailFragment\r\n    }\r\n  }\r\n  ${MovieListPage.fragments.basicDetail}\r\n`;\r\n","// import { QUERY_MOVIES_LIST } from \"./queryMovieList\";\r\nimport { gql } from \"@apollo/client\";\r\n\r\nexport const QUERY_MOVIE_DETAIL = gql`\r\n  query QueryMovieDetail($id: ID, $isMovie: Boolean) {\r\n    movieDetail(id: $id, isMovie: $isMovie) {\r\n      TMDB_MovieDetail {\r\n        imdb_id\r\n        id\r\n        title\r\n        number_of_seasons\r\n        number_of_episodes\r\n        release_date\r\n        poster_path\r\n        backdrop_path\r\n        overview\r\n        credits {\r\n          name\r\n          character\r\n          profile_path\r\n        }\r\n        budget\r\n        videos {\r\n          name\r\n          type\r\n          key\r\n        }\r\n        images {\r\n          backdrops {\r\n            file_path\r\n          }\r\n          posters {\r\n            file_path\r\n          }\r\n        }\r\n      }\r\n      OMDB_MovieDetail {\r\n        Genre\r\n        Director\r\n        Writer\r\n        Actors\r\n        Country\r\n        Awards\r\n        Ratings {\r\n          Source\r\n          Value\r\n        }\r\n        Runtime\r\n        imdbRating\r\n        Production\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\ninterface Props {}\r\n\r\nconst Footer = (props: Props) => {\r\n  return (\r\n    <div>\r\n      <p>Footer !!</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box; \r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport Footer from \"./Footer\";\r\n// import Navbar from \"./navbar/Navbar\";\r\n// import Navbar from \"../nav/Navbar\";\r\nimport Navbar from \"../nav/Navbar\";\r\n\r\nimport GlobalStyle from \"../../styled-components/globalStyles\";\r\n\r\ninterface Props {\r\n  children: React.ReactNode;\r\n}\r\n\r\n// const Layout = (props: Props) => {\r\nconst Layout = ({ children }: Props) => {\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      {/* <Navbar /> */}\r\n      <div>{children}</div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport { ICombined } from \"../../model/combined\";\r\n\r\ninterface Props {\r\n  combinedFetch: ICombined;\r\n}\r\n\r\nconst BasicDetails: React.FC<Props> = ({\r\n  combinedFetch: {\r\n    poster_path,\r\n    backdrop_path,\r\n    title,\r\n    release_date,\r\n    overview,\r\n    budget,\r\n    Genre,\r\n    Director,\r\n    Writer,\r\n    number_of_episodes,\r\n    number_of_seasons,\r\n    // Actors,\r\n    Country,\r\n    Awards,\r\n    Ratings,\r\n    imdbRating,\r\n    Production,\r\n    Runtime,\r\n\r\n    //\r\n  },\r\n}) => {\r\n  let budgetFormat = budget\r\n    ? new Intl.NumberFormat().format(budget)\r\n    : undefined;\r\n  let RottenTomato: string = \"\";\r\n\r\n  if (Ratings && Ratings.length > 0) {\r\n    Ratings.map((Rat) => {\r\n      if (Rat.Source === \"Rotten Tomatoes\") {\r\n        RottenTomato = Rat.Value;\r\n      }\r\n    });\r\n  }\r\n\r\n  const imgSrc = poster_path !== \"no_image\" ? poster_path : backdrop_path;\r\n\r\n  return (\r\n    <div className=\"basic-info-container\">\r\n      <div className=\"container-fluid basic-info\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-5 pt-4 text-center\">\r\n            <img\r\n              className=\"basic-info__image\"\r\n              src={\r\n                imgSrc !== \"no_image\"\r\n                  ? imgSrc\r\n                  : `${process.env.PUBLIC_URL}/img/no_image.png`\r\n              }\r\n              alt={title}\r\n            />\r\n          </div>\r\n          <div className=\"col mt-3 mt-md-0 pt-4\">\r\n            {release_date && (\r\n              <>\r\n                <span>Release Date:</span> {release_date}\r\n                <br />\r\n              </>\r\n            )}\r\n\r\n            {Genre && Genre !== \"N/A\" && (\r\n              <>\r\n                {\" \"}\r\n                <span>Genres:</span> {Genre}\r\n                <br />\r\n              </>\r\n            )}\r\n            {Runtime && Runtime !== \"N/A\" && (\r\n              <>\r\n                {\" \"}\r\n                <span>Runtime:</span> {Runtime}\r\n                <br />\r\n              </>\r\n            )}\r\n            {number_of_episodes && number_of_episodes !== undefined && (\r\n              <>\r\n                {\" \"}\r\n                <span>Number Of Episodes:</span> {number_of_episodes}\r\n                <br />\r\n              </>\r\n            )}\r\n            {number_of_seasons && number_of_seasons !== undefined && (\r\n              <>\r\n                {\" \"}\r\n                <span>Number Of Seasons:</span> {number_of_seasons}\r\n                <br />\r\n              </>\r\n            )}\r\n\r\n            {budgetFormat && (\r\n              <>\r\n                <span>Budget:</span> {budgetFormat} <br />\r\n              </>\r\n            )}\r\n            {Director && Director !== \"N/A\" && (\r\n              <>\r\n                <span>Director:</span> {Director} <br />\r\n              </>\r\n            )}\r\n            {Writer && Writer !== \"N/A\" && (\r\n              <>\r\n                <span>Writer:</span> {Writer} <br />\r\n              </>\r\n            )}\r\n            {Country && Country !== \"N/A\" && (\r\n              <>\r\n                <span>Country:</span> {Country} <br />\r\n              </>\r\n            )}\r\n            {Awards && Awards !== \"N/A\" && (\r\n              <>\r\n                <span>Awards:</span> {Awards} <br />\r\n              </>\r\n            )}\r\n            {Production && Production !== \"N/A\" && (\r\n              <>\r\n                <span>Production:</span> {Production} <br />\r\n              </>\r\n            )}\r\n            {imdbRating && imdbRating !== \"N/A\" && (\r\n              <>\r\n                <span>IMDB: </span>\r\n                {imdbRating} <br />\r\n              </>\r\n            )}\r\n            {RottenTomato !== \"\" && RottenTomato !== \"N/A\" && (\r\n              <p>\r\n                <span>Rotten Tomatoes:</span> {RottenTomato}{\" \"}\r\n              </p>\r\n            )}\r\n            {overview && (\r\n              <p>\r\n                <span>Overview:</span> {overview}{\" \"}\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BasicDetails;\r\n","import React from \"react\";\r\n\r\ninterface ICast {\r\n  character: string;\r\n  name: string;\r\n  profile_path: string;\r\n}\r\ninterface Props {\r\n  cast: ICast[];\r\n  actors: string;\r\n}\r\n\r\nconst Credits: React.FC<Props> = ({ cast, actors }) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        {cast && cast.length === 0 && actors && actors !== \"N/A\" && (\r\n          <>\r\n            <span className=\"h3\">The Cast: </span> {actors}\r\n          </>\r\n        )}\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            {cast.map((member: ICast, index: number) => {\r\n              const imgSrc = member.profile_path\r\n                ? // ? `https://image.tmdb.org/t/p/original${member.profile_path}`\r\n                  // `https://image.tmdb.org/t/p/w92/${member.profile_path}`\r\n                  `https://image.tmdb.org/t/p/w185/${member.profile_path}`\r\n                : `${process.env.PUBLIC_URL}/img/no_image.png`;\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className=\"cast-container clo col-6 col-sm-4 col-md-3 p-0 border d-flex align-items-stretch\"\r\n                >\r\n                  <div className=\"cast text-center\">\r\n                    <div className=\"cast__img-container\">\r\n                      <img src={imgSrc} alt={member.name} />\r\n                    </div>\r\n                    <div className=\"cast__character\">\r\n                      <span className=\"lead\">{member.name} </span>\r\n                      <br />\r\n                      <span className=\"\">{member.character} </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>{\" \"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Credits;\r\n","import React, { MouseEvent } from \"react\";\r\n\r\ninterface Props {\r\n  image: {\r\n    file_path: string;\r\n  };\r\n  length: number;\r\n  //   openOverlay: (event: MouseEvent<HTMLButtonElement>) => void;\r\n  openOverlay: (event: MouseEvent<HTMLImageElement>) => void;\r\n}\r\n\r\nconst MovieImages: React.FC<Props> = ({ image, length, openOverlay }) => {\r\n  //\r\n  const basePosterUrl = `https://image.tmdb.org/t/p/`;\r\n\r\n  const openModal = (e: MouseEvent<HTMLImageElement>) => {\r\n    openOverlay(e);\r\n  };\r\n  return (\r\n    <div>\r\n      <img\r\n        onClick={openModal}\r\n        src={`${basePosterUrl}w1280${image.file_path}`}\r\n        style={{ width: \"100%\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieImages;\r\n","import React, { useRef, MouseEvent, useState } from \"react\";\r\nimport Slider from \"react-slick\";\r\n\r\nimport MovieImages from \"./MovieImages\";\r\n\r\ninterface Props {\r\n  images: {\r\n    backdrops: { file_path: string }[];\r\n    posters: { file_path: string }[];\r\n  };\r\n}\r\n\r\nconst ImagesSlide: React.FC<Props> = ({ images: { backdrops } }) => {\r\n  const [imageSrc, setImageSrc] = useState(\"\");\r\n  const [showOverlay, setShowOverlay] = useState(false);\r\n  const overlayRef = useRef<any>();\r\n\r\n  const openOverlay = (event: MouseEvent<HTMLImageElement>) => {\r\n    setImageSrc(event.currentTarget.src);\r\n    setShowOverlay(true);\r\n  };\r\n\r\n  const overlayClickHandler = (e: MouseEvent) => {\r\n    if (e.target === overlayRef.current) {\r\n      setShowOverlay(false);\r\n    }\r\n  };\r\n\r\n  let settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    initialSlide: 1,\r\n\r\n    // className: \"center\",\r\n    // centerMode: true,\r\n\r\n    // slidesToShow: 1,\r\n    slidesToShow: 3,\r\n    // centerPadding: \"60px\",\r\n    // lazyLoad: true,\r\n    slidesToScroll: 3,\r\n    // autoplay: true,\r\n    autoplay: false,\r\n    // speed: 2000,\r\n    autoplaySpeed: 2000,\r\n    // autoplaySpeed: 1500\r\n    // cssEase: \"linear\"\r\n    pauseOnHover: false,\r\n\r\n    responsive: [\r\n      {\r\n        breakpoint: 768,\r\n        settings: {\r\n          className: \"center\",\r\n          centerMode: true,\r\n          dots: false,\r\n          arrows: false,\r\n          slidesToShow: 2,\r\n          infinite: true,\r\n          slidesToScroll: 1,\r\n          swipeToSlide: true,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          dots: false,\r\n          className: \"center\",\r\n          centerMode: true,\r\n          arrows: false,\r\n          slidesToShow: 1,\r\n          infinite: true,\r\n          slidesToScroll: 1,\r\n          swipeToSlide: true,\r\n        },\r\n      },\r\n      // {\r\n      //   breakpoint: 992,\r\n      //   settings: \"unslick\"\r\n      // }\r\n    ],\r\n  };\r\n  return (\r\n    <div className=\"ImagesSlide mb-4\">\r\n      <Slider {...settings}>\r\n        {backdrops.map((image: any, index: number) => (\r\n          <MovieImages\r\n            image={image}\r\n            key={index}\r\n            openOverlay={openOverlay}\r\n            length={backdrops.length}\r\n          />\r\n        ))}\r\n      </Slider>\r\n      {showOverlay ? (\r\n        <>\r\n          <div\r\n            className=\"overlay\"\r\n            onClick={overlayClickHandler}\r\n            ref={overlayRef}\r\n          >\r\n            <button\r\n              onClick={() => setShowOverlay(false)}\r\n              type=\"button\"\r\n              className=\"close\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n            <div className=\"overlay__image-container\">\r\n              <img src={imageSrc} />\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImagesSlide;\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\ninterface Props {\r\n  video: {\r\n    name: string;\r\n    key: string;\r\n    id: string;\r\n    type: string;\r\n  };\r\n  index: number;\r\n}\r\n\r\nconst MovieVideos: React.FC<Props> = ({ video, index }) => {\r\n  const videoSrc = \"https://www.youtube.com/embed/\" + video.key;\r\n\r\n  const iframeRef = useRef<any>(null);\r\n  const modalRef = useRef<any>(null);\r\n\r\n  const playVideo = () => {\r\n    iframeRef.current.src = videoSrc;\r\n  };\r\n\r\n  const stopVideo = () => {\r\n    iframeRef.current.src = iframeRef.current.src;\r\n  };\r\n\r\n  useEffect(() => {\r\n    modalRef.current.addEventListener(\"click\", stopVideo);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-6 d-flex align-items-center  border-bottom\">\r\n            {video.name}\r\n          </div>\r\n          <div className=\"col d-flex align-items-center justify-content-center p-1\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary trailer-button\"\r\n              data-toggle=\"modal\"\r\n              data-target={\"#\" + \"trailer\" + index.toString()}\r\n              onClick={playVideo}\r\n            >\r\n              Watch Trailer\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"modal fade bd-example-modal-lg\"\r\n        id={\"trailer\" + index.toString()}\r\n        ref={modalRef}\r\n        tabIndex={-1}\r\n        role=\"dialog\"\r\n        aria-labelledby=\"myLargeModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">\r\n                {video.name}\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n                onClick={stopVideo}\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>{\" \"}\r\n            <div className=\"embed-responsive embed-responsive-16by9\">\r\n              <iframe\r\n                ref={iframeRef}\r\n                className=\"embed-responsive-item\"\r\n                src={\"\"}\r\n                allowFullScreen\r\n              ></iframe>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieVideos;\r\n","import React from \"react\";\r\nimport { PopularMovie } from \"../../model/PopularMovie\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n// import {} from \"styled-components/cssprop\";\r\n\r\nconst StyledCard = styled.div<{ no_image: string }>`\r\n  overflow: hidden;\r\n  padding: 0 0 2px;\r\n  margin: 0px auto 0;\r\n  width: 200px;\r\n\r\n  height: 100%;\r\n\r\n  /* height: auto; */\r\n  /* border-bottom: 4px solid black; */\r\n  border-bottom: ${(props) =>\r\n    props.no_image === \"no_image\" ? \"1px solid black\" : \"none\"};\r\n  /* font-family: Quicksand, arial, sans-serif; */\r\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.05), 0 0px 40px rgba(0, 0, 0, 0.08);\r\n  border-radius: 5px;\r\n\r\n  img {\r\n    min-width: 200px;\r\n    width: 100%;\r\n  }\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background-color: rgba(0, 0, 0, 0.2);\r\n  }\r\n\r\n  position: relative;\r\n  .movie-info {\r\n    text-align: center;\r\n    display: none;\r\n    background-color: rgba(0, 0, 0, 0.7);\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    transition: 1s ease-in;\r\n  }\r\n\r\n  &:hover .movie-info {\r\n    display: block;\r\n    color: #ddd;\r\n  }\r\n`;\r\n\r\nconst StyledTitle = styled.h5`\r\n  /* color: #fff; */\r\n  margin-top: 6px;\r\n  color: #ccc;\r\n  font-weight: 300;\r\n`;\r\n\r\nconst StyledDate = styled.div`\r\n  color: #ccc;\r\n  font-weight: 300;\r\n  font-size: 1.5rem;\r\n  margin: 6px 0;\r\n`;\r\n\r\ninterface MovieProps {\r\n  oneMovie: PopularMovie;\r\n}\r\n\r\nconst Movie: React.FC<MovieProps> = ({ oneMovie }) => {\r\n  const {\r\n    isMovie,\r\n    id,\r\n    poster_path,\r\n    backdrop_path,\r\n    title,\r\n    release_date,\r\n  } = oneMovie;\r\n  const kind: string = isMovie ? \"film\" : \"tv-show\";\r\n\r\n  const imgSrc = poster_path !== \"no_image\" ? poster_path : backdrop_path;\r\n\r\n  return (\r\n    <div>\r\n      <Link\r\n        to={{\r\n          pathname: `/details/${kind}/${id}/${title.split(\" \").join(\"-\")}`,\r\n          state: {\r\n            movie: JSON.stringify(oneMovie),\r\n          },\r\n        }}\r\n      >\r\n        <StyledCard no_image={imgSrc}>\r\n          <img\r\n            src={\r\n              imgSrc !== \"no_image\"\r\n                ? imgSrc\r\n                : `${process.env.PUBLIC_URL}/img/no_image.png`\r\n            }\r\n            alt={title + id}\r\n          />\r\n          <div className=\"movie-info\">\r\n            <StyledTitle>{title}</StyledTitle>\r\n            <StyledDate>({release_date}) </StyledDate>\r\n          </div>\r\n        </StyledCard>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\n\r\nimport { PopularMovie } from \"../../model/PopularMovie\";\r\n\r\nimport Movie from \"./Movie\";\r\ninterface MovieListProps {\r\n  movieList: PopularMovie[];\r\n  listType: string;\r\n}\r\n\r\nconst MoviesList: React.FC<MovieListProps> = ({ movieList, listType }) => {\r\n  return (\r\n    <div className=\"movies-list-container container text-light  mt-4\">\r\n      <h1>{listType}</h1>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {movieList &&\r\n            movieList.slice(0, 10).map((movie: PopularMovie) => (\r\n              <div\r\n                className=\"col m-2 p-0 d-flex justify-content-center align-items-stretch\"\r\n                key={movie.id}\r\n              >\r\n                <Movie oneMovie={movie} key={movie.id} />\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesList;\r\n","import React from \"react\";\r\nimport { PopularMovie } from \"../../model/PopularMovie\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface MovieProps {\r\n  oneMovie: PopularMovie;\r\n}\r\nconst Slid: React.FC<MovieProps> = ({ oneMovie }) => {\r\n  const {\r\n    isMovie,\r\n    title,\r\n    backdrop_path,\r\n    id,\r\n    overview,\r\n    release_date,\r\n    Genres,\r\n  } = oneMovie;\r\n\r\n  const kind: string = isMovie ? \"film\" : \"tv-show\";\r\n\r\n  return (\r\n    <div className=\"slide-container\">\r\n      <img src={backdrop_path} alt={title} />\r\n      <div className=\"container\">\r\n        <div className=\"slide slide--has-caption slick-slide\">\r\n          <div className=\"slide__caption\">\r\n            <Link\r\n              to={{\r\n                // pathname: `/movie/${id}/${title.split(\" \").join(\"-\")}`,\r\n                pathname: `/details/${kind}/${id}/${title\r\n                  .split(\" \")\r\n                  .join(\"-\")}`,\r\n                state: {\r\n                  movie: JSON.stringify(oneMovie),\r\n                },\r\n              }}\r\n            >\r\n              <h1 className=\"slide__caption__title\">{title}</h1>\r\n            </Link>\r\n            <ul className=\"list-inline\">\r\n              <li className=\"slide__caption__release-date list-inline-item\">\r\n                <span>Release date: </span>\r\n                {release_date}\r\n              </li>\r\n              <li className=\"slide__caption__genres list-inline-item\">\r\n                <span>Genres: </span>\r\n                {Genres}\r\n              </li>\r\n            </ul>\r\n            <p className=\"slide__caption__overview d-none d-md-block\">\r\n              {overview}{\" \"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slid;\r\n","import React from \"react\";\r\nimport Slider from \"react-slick\";\r\n\r\nimport Slid from \"./Slide\";\r\nimport { PopularMovie } from \"../../model/PopularMovie\";\r\n\r\ninterface MainSliderProps {\r\n  movieList: PopularMovie[];\r\n}\r\nconst MainSlider: React.FC<MainSliderProps> = ({ movieList }) => {\r\n  //\r\n  var settings = {\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    dots: true,\r\n    infinite: true,\r\n    initialSlide: 1,\r\n    autoplay: true,\r\n    arrows: false,\r\n    autoplaySpeed: 5000,\r\n    pauseOnHover: false,\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-slider container\">\r\n      <Slider {...settings}>\r\n        {movieList &&\r\n          movieList[0] &&\r\n          // state.movieArr[0].poster_path &&\r\n          movieList[0].backdrop_path &&\r\n          movieList.map(\r\n            (movie: PopularMovie) =>\r\n              movie.backdrop_path !==\r\n                process.env.PUBLIC_URL + \"/img/no_image.png\" && (\r\n                <Slid oneMovie={movie} key={movie.id} />\r\n              )\r\n          )}\r\n      </Slider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainSlider;\r\n","import React from \"react\";\r\n\r\nimport { QUERY_MOVIES_LIST, QUERY_TV_SHOW_LIST } from \"../graphql/queries\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nimport { Layout, MoviesList, MainSlider } from \"../components\";\r\n\r\ninterface Props {}\r\n\r\nconst Home: React.FC<Props> = () => {\r\n  const {\r\n    loading: movieListLoading,\r\n    error: movieListError,\r\n    data: movieListData,\r\n  } = useQuery(QUERY_MOVIES_LIST);\r\n\r\n  const {\r\n    loading: TVShowListLoading,\r\n    error: TVShowListError,\r\n    data: TVShowListData,\r\n  } = useQuery(QUERY_TV_SHOW_LIST);\r\n\r\n  if (movieListLoading || TVShowListLoading) return <div>Loading ... </div>;\r\n  if (movieListError || TVShowListError)\r\n    return <div>Something went wrong {\":(\"}</div>;\r\n\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <MainSlider movieList={movieListData.movieList} />\r\n\r\n        <MoviesList movieList={movieListData.movieList} listType={\"Movies\"} />\r\n        <MoviesList\r\n          movieList={TVShowListData.TVShowList}\r\n          listType={\"TV Shows\"}\r\n        />\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Layout } from \"../components\";\r\n\r\ninterface Props {}\r\n\r\nconst About: React.FC<Props> = () => {\r\n  return (\r\n    <Layout>\r\n      <div\r\n        className=\"container-fluid about-container text-center bg-dark font-weight-bold text-light\"\r\n        style={{ height: \"100vh\" }}\r\n      >\r\n        <div className=\"row h-100 border border-light border my-auto\">\r\n          <div className=\"col-12 d-flex flex-column justify-content-center align-items-center\">\r\n            <p style={{ width: \"75%\" }} className=\"about-text\">\r\n              this website is meant to give the user enough information to\r\n              decide whether if a movie is worth watching from the user\r\n              perspective, by providing the user with information related to the\r\n              movie like the (actors, directors, overview, release-date ,\r\n              Ratings ...) and movie images and trailers, by using the public\r\n              APIs from TMDB and OMDB\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useEffect } from \"react\";\r\nimport { useLocalSession } from \"../hooks/useLocalSessionType\";\r\n\r\nimport { RouteComponentProps } from \"react-router\";\r\n\r\nimport { PopularMovie } from \"../model/PopularMovie\";\r\nimport { Layout, Movie } from \"../components\";\r\n\r\ninterface Props\r\n  extends RouteComponentProps<\r\n    { keyword: string }, // Types of the parameters for <<< match >>>\r\n    {},\r\n    { keyword: string; searchedMovies: string } // Types of the state parameters for <<< location >>>\r\n  > {}\r\n\r\nconst SearchResults: React.FC<Props> = ({ match, location }) => {\r\n  //\r\n  const searchTerm = match.params.keyword.substring(1);\r\n\r\n  const [localSession, setLocalSession] = useLocalSession(\r\n    \"session-type\",\r\n    location.state\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (location.state && location.state.searchedMovies) {\r\n      setLocalSession(location.state);\r\n    }\r\n  }, [searchTerm]);\r\n\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <div className=\"container text-light mt-5\">\r\n          {match.params && match.params.keyword && (\r\n            <h1>\r\n              {/* Result for: {match.params.keyword.substring(1).toUpperCase()}{\" \"} */}\r\n              Result for: {localSession && localSession.keyword}{\" \"}\r\n            </h1>\r\n          )}\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              {localSession &&\r\n                localSession.searchedMovies &&\r\n                JSON.parse(localSession.searchedMovies).map(\r\n                  (x: PopularMovie, index: number) => (\r\n                    <div\r\n                      className=\"col  m-2 p-0 d-flex align-items-stretch justify-content-center\"\r\n                      key={index}\r\n                    >\r\n                      <Movie oneMovie={x} />\r\n                      {/* <Movie oneMovie={x} key={x.id} /> */}\r\n                    </div>\r\n                  )\r\n                )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import { useState, useEffect } from \"react\";\r\n\r\ntype ReturnType<T> = [\r\n  T | undefined,\r\n  React.Dispatch<React.SetStateAction<T | undefined>>\r\n];\r\n\r\nexport const useLocalSession = <T,>(\r\n  key: string,\r\n  initialValue?: T\r\n): ReturnType<T> => {\r\n  const [state, setState] = useState<T | undefined>(() => {\r\n    // fist we check if we don't have an initialValue then we don't want to set an initialValue\r\n\r\n    //* we disabled this return so that i can avoid set the state from the localStorage!\r\n    // if (!initialValue) return;\r\n\r\n    try {\r\n      // if the localStorage contains the key that we sent in the localStorage value .. other wise we sent the initialValue\r\n      const value = localStorage.getItem(key);\r\n\r\n      return value ? JSON.parse(value) : initialValue;\r\n    } catch (error) {\r\n      // if we get an Error, we send the initialValue\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    //\r\n    // if we don't set an initialState .. then we will not have a state !\r\n    // if we don't do this check .. then we will write undefined in the localStorage ..\r\n    // and we don't want that!\r\n    if (state) {\r\n      try {\r\n        localStorage.setItem(key, JSON.stringify(state));\r\n      } catch (error) {\r\n        console.log(\"error: \", error);\r\n      }\r\n    }\r\n  }, [state, key]);\r\n\r\n  return [state, setState];\r\n};\r\n","import React from \"react\";\r\n// import Layout from \"../components/Layout\";\r\nimport { Layout } from \"../components\";\r\n\r\ninterface Props {}\r\n\r\nconst ViewAll: React.FC<Props> = () => {\r\n  return (\r\n    <Layout>\r\n      <div style={{ color: \"white\" }}>\r\n        <h1>Allllll </h1>\r\n        <h1>Allllll </h1>\r\n        <h1>Allllll </h1>\r\n        <h1>Allllll </h1>\r\n        <h1>Allllll </h1>\r\n        <h1>Allllll </h1>\r\n        <h1>Allllll </h1>\r\n        <h1>Allllll </h1>\r\n        <h1>Allllll </h1>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ViewAll;\r\n","import React, { ReactElement } from \"react\";\r\n// import Layout from \"../components/Layout\";\r\nimport { Layout } from \"../components\";\r\n\r\n// interface Props {}\r\n\r\n// export default function NotFound({}: Props): ReactElement {\r\nexport default function NotFound(): ReactElement {\r\n  return (\r\n    <Layout>\r\n      <div\r\n        className=\"container-fluid text-center bg-dark font-weight-bold text-light\"\r\n        style={{ height: \"100vh\" }}\r\n      >\r\n        <div className=\"row h-100  my-auto\">\r\n          <div className=\"col-12  d-flex flex-column justify-content-center\">\r\n            <p className=\"display-1\">404</p>\r\n            <p>Not Found...!!!!! </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n\r\nimport { QUERY_MOVIE_DETAIL } from \"../graphql/queries\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nimport {\r\n  Layout,\r\n  BasicDetails,\r\n  Credits,\r\n  ImagesSlide,\r\n  MovieVideos,\r\n} from \"../components\";\r\n\r\ninterface Props\r\n  extends RouteComponentProps<{ id: string; kind: string; title: string }> {}\r\n\r\nconst MovieDetails: React.FC<Props> = ({ match }) => {\r\n  //\r\n  const { id, kind, title } = match.params;\r\n  const isMovie = kind === \"film\" ? true : false;\r\n\r\n  const { loading, error, data } = useQuery(QUERY_MOVIE_DETAIL, {\r\n    variables: { id: id, isMovie: isMovie },\r\n  });\r\n\r\n  if (loading)\r\n    return <div style={{ color: \"white\", fontSize: \"50px\" }}>Loading ... </div>;\r\n\r\n  if (error) return <div>Error, something went wrong!</div>;\r\n\r\n  const movieDetails = {\r\n    ...data.movieDetail.OMDB_MovieDetail,\r\n    ...data.movieDetail.TMDB_MovieDetail,\r\n  };\r\n\r\n  let trailers: any;\r\n  let images: any;\r\n  if (!movieDetails?.videos || movieDetails?.videos?.length === 0) {\r\n    // trailers = <h3>No Videos Found! </h3>;\r\n    trailers = (\r\n      <div className=\"container\">\r\n        <p className=\"trailer-available\"> No Related Videos Found! </p>{\" \"}\r\n      </div>\r\n    );\r\n  } else {\r\n    trailers = movieDetails.videos?.map((video: any, index: number) => (\r\n      <MovieVideos video={video} key={index} index={index} />\r\n    ));\r\n  }\r\n\r\n  if (!movieDetails?.images || !movieDetails?.images?.backdrops) {\r\n    images = <h3>No Images Found </h3>;\r\n  } else {\r\n    images = <ImagesSlide images={movieDetails.images} />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"movie-details-container  px-sm-5 pb-5\">\r\n        <div id=\"accordion\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\" id=\"headingOne\">\r\n              <h5 className=\"mb-0\">\r\n                <button\r\n                  className=\"btn btn-link\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\"#collapseOne\"\r\n                  aria-expanded=\"true\"\r\n                  aria-controls=\"collapseOne\"\r\n                >\r\n                  Movie Details\r\n                </button>\r\n              </h5>\r\n            </div>\r\n\r\n            <div\r\n              id=\"collapseOne\"\r\n              className=\"collapse show\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-parent=\"#accordion\"\r\n            >\r\n              <div className=\"card-body\">\r\n                <div className=\"container-fluid\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12  text-center border border-red\">\r\n                      <p className=\"h1 my-3 movie-detail__title\">\r\n                        {title.split(\"-\").join(\" \")}{\" \"}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {loading && <h1>Loading ............</h1>}\r\n                {error && (\r\n                  <h3>\r\n                    {`:(`} <br /> it seems like something went wrong!{\" \"}\r\n                  </h3>\r\n                )}\r\n                {!loading && <BasicDetails combinedFetch={movieDetails} />}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\" id=\"headingTwo\">\r\n              <h5 className=\"mb-0\">\r\n                <button\r\n                  className=\"btn btn-link collapsed\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\"#collapseTwo\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"collapseTwo\"\r\n                >\r\n                  Media (Images and Videos)\r\n                </button>\r\n              </h5>\r\n            </div>\r\n            <div\r\n              id=\"collapseTwo\"\r\n              className=\"collapse\"\r\n              aria-labelledby=\"headingTwo\"\r\n              data-parent=\"#accordion\"\r\n            >\r\n              {images}\r\n\r\n              {movieDetails?.videos?.results?.length > 0 && (\r\n                <div className=\"container\">\r\n                  <p className=\"trailer-available\">Available Trailers:</p>{\" \"}\r\n                </div>\r\n              )}\r\n              {trailers}\r\n            </div>\r\n          </div>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\" id=\"headingThree\">\r\n              <h5 className=\"mb-0\">\r\n                <button\r\n                  className=\"btn btn-link collapsed\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\"#collapseThree\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"collapseThree\"\r\n                >\r\n                  Credits: The Cast....\r\n                </button>\r\n              </h5>\r\n            </div>\r\n            <div\r\n              id=\"collapseThree\"\r\n              className=\"collapse\"\r\n              aria-labelledby=\"headingThree\"\r\n              data-parent=\"#accordion\"\r\n            >\r\n              <div className=\"card-body\">\r\n                {movieDetails && Object.keys(movieDetails).length === 0 && (\r\n                  <h1>No Actors Found</h1>\r\n                )}\r\n                {movieDetails.Actors === \"N/A\" && (\r\n                  <p>\r\n                    unfortunately, we couldn't find information related to the\r\n                    Actors {`:(`}{\" \"}\r\n                  </p>\r\n                )}\r\n                {movieDetails && movieDetails.credits && (\r\n                  <div className=\"container mt-4\">\r\n                    <Credits\r\n                      // cast={movieDetails.credits.cast}\r\n                      cast={movieDetails.credits}\r\n                      actors={movieDetails.Actors}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PopularMovie } from \"../../model/PopularMovie\";\r\n\r\ninterface Props {\r\n  movie: PopularMovie;\r\n}\r\n\r\nconst Suggestion: React.FC<Props> = ({ movie }) => {\r\n  //\r\n  const {\r\n    poster_path,\r\n    backdrop_path,\r\n    isMovie,\r\n    id,\r\n    title,\r\n    release_date,\r\n    Genres,\r\n  } = movie;\r\n  //\r\n  const kind: string = isMovie ? \"film\" : \"tv-show\";\r\n\r\n  const imgSrc = poster_path !== \"no_image\" ? poster_path : backdrop_path;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"suggestions__item d-flex border bg-white\">\r\n        <img\r\n          src={\r\n            imgSrc !== \"no_image\"\r\n              ? imgSrc\r\n              : `${process.env.PUBLIC_URL}/img/no_image.png`\r\n          }\r\n          className=\"suggestions__item__image\"\r\n        />\r\n\r\n        <div className=\"suggestions__item__info pl-2\">\r\n          <Link\r\n            to={{\r\n              pathname: `/details/${kind}/${id}/${title.split(\" \").join(\"-\")}`,\r\n              state: {\r\n                movie: JSON.stringify(movie),\r\n              },\r\n            }}\r\n          >\r\n            <p className=\"suggestions__item__info__title m-0  font-weight-bold\">\r\n              {title}\r\n            </p>\r\n          </Link>\r\n          <p className=\"suggestions__item__info__year m-0 text-muted\">\r\n            Release: {release_date}\r\n          </p>\r\n          <p className=\"suggestions__item__info__genres m-0 text-muted\">\r\n            {Genres}{\" \"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Suggestion;\r\n","import React from \"react\";\r\n\r\ninterface Props {\r\n  // searchTerm: string;\r\n}\r\n\r\nconst LoadingSuggestions: React.FC<Props> = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"suggestions__item d-flex border bg-white\">\r\n        <div className=\"suggestions__item__info pl-2\">\r\n          <p className=\"suggestions__item__info__title m-0\">\r\n            <span\r\n              className=\"m-0 font-weight-bold\"\r\n              style={{ color: \"rgb(0, 123, 255)\" }}\r\n            >\r\n              Loading ...{\" \"}\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSuggestions;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Suggestion from \"./Suggestion\";\r\nimport LoadingSuggestions from \"./LoadingSuggestions\";\r\n\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { QUERY_SEARCH_LIST } from \"../../graphql/queries\";\r\n\r\ninterface Props {}\r\n\r\nconst MainNav: React.FC<Props> = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  const searchRef = React.useRef<any>(null);\r\n  //* ##################\r\n  const SEARCH_DEBOUNCE_TIMEOUT = 500;\r\n\r\n  const { loading, data } = useDebouncedQuery(\r\n    searchTerm,\r\n    SEARCH_DEBOUNCE_TIMEOUT\r\n  );\r\n\r\n  function handleClick(e: any) {\r\n    const clickedElement = e.target;\r\n\r\n    const clickedButton = clickedElement.closest(\".suggestions__button\");\r\n    const clickedSearchBox = clickedElement.closest(\".search-box\");\r\n    const clickedSuggestions = clickedElement.closest(\".suggestions\");\r\n    const clickedTitle = clickedElement.closest(\r\n      \".suggestions__item__info__title\"\r\n    );\r\n\r\n    if (clickedTitle) {\r\n      setShowSuggestions(false);\r\n      searchRef.current.value = \"\";\r\n\r\n      return;\r\n    }\r\n\r\n    if (clickedButton) {\r\n      setShowSuggestions(false);\r\n      searchRef.current.value = \"\";\r\n    }\r\n\r\n    if (!clickedSearchBox && !clickedSuggestions) {\r\n      setShowSuggestions(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"click\", handleClick);\r\n\r\n    return () => window.removeEventListener(\"click\", handleClick);\r\n  }, []);\r\n\r\n  // %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n\r\n  return (\r\n    <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark\">\r\n      <div className=\"container\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Movie Catalog\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarsExample07\"\r\n          aria-controls=\"navbarsExample07\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarsExample07\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                About <span className=\"sr-only\">(current)</span>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <form className=\"form-inline my-2 my-md-0 search-form form-group\">\r\n            <input\r\n              ref={searchRef}\r\n              onChange={(e) => {\r\n                e.target.value === \"\"\r\n                  ? setShowSuggestions(false)\r\n                  : setShowSuggestions(true);\r\n\r\n                setSearchTerm(e.target.value);\r\n              }}\r\n              className=\"form-control w-100 search-box\"\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n\r\n            <div\r\n              className=\"suggestions rounded\"\r\n              onClick={() => setShowSuggestions(true)}\r\n            >\r\n              {showSuggestions && loading && <LoadingSuggestions />}\r\n\r\n              {showSuggestions &&\r\n                data &&\r\n                data.searchMovieList &&\r\n                data.searchMovieList\r\n                  .slice(0, 5)\r\n                  .map((movie: any, index: number) => (\r\n                    <Suggestion movie={movie} key={index} />\r\n                  ))}\r\n\r\n              {showSuggestions &&\r\n                data &&\r\n                data.searchMovieList &&\r\n                data.searchMovieList.length !== 0 && (\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/search/keyword=${searchRef.current.value\r\n                        .split(\" \")\r\n                        .join(\"-\")}`,\r\n                      state: {\r\n                        searchedMovies: JSON.stringify(data.searchMovieList),\r\n                        keyword: searchRef.current.value,\r\n                      },\r\n                    }}\r\n                  >\r\n                    <button className=\"suggestions__button btn btn-primary btn-block border\">\r\n                      View All\r\n                    </button>\r\n                  </Link>\r\n                )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default MainNav;\r\n\r\n// Hook\r\nconst useDebouncedQuery = (value: string, delay: number) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  const queriedData = useQuery(QUERY_SEARCH_LIST, {\r\n    variables: { searchTerm: debouncedValue },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value.split(\" \").join(\"+\"));\r\n    }, [delay]);\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value]);\r\n\r\n  return queriedData;\r\n};\r\n","import React, { useReducer } from \"react\";\nimport { movieReducer, initialState } from \"./appState/movieReducer\";\nimport { Actions } from \"./appState/movieActions\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ScrollToTop from \"./ScrollTop\";\n\n// ##########\nimport {\n  Home,\n  About,\n  SearchResults,\n  ViewAll,\n  NotFound,\n  MovieDetails,\n} from \"./pages\";\n\n// ##########\nimport \"./App.scss\";\nimport MainNav from \"./components/navbar/MainNav\";\n\nexport type StoreApi = {\n  state: typeof initialState;\n  dispatch: React.Dispatch<Actions>;\n  // dispatch: React.Dispatch<any>;\n};\n\nexport const MoviesContext = React.createContext<\n  StoreApi | typeof initialState\n>(initialState);\n\nconst App: React.FC = () => {\n  const [state, dispatch] = useReducer(movieReducer, initialState);\n\n  return (\n    <div className=\"app min-vh-100\">\n      <MoviesContext.Provider value={{ state, dispatch } as StoreApi}>\n        <Router basename={process.env.PUBLIC_URL}>\n          <ScrollToTop />\n          <MainNav />\n\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/results\" component={SearchResults} />\n            <Route exact path=\"/viewall\" component={ViewAll} />\n            <Route\n              exact\n              path=\"/details/:kind/:id/:title\"\n              component={MovieDetails}\n            />\n\n            <Route\n              exact\n              // path=\"/search?keyword:keyword\"\n              path=\"/search/keyword:keyword\"\n              component={SearchResults}\n            />\n            <Route path=\"/\" render={NotFound} />\n          </Switch>\n        </Router>\n      </MoviesContext.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// https://movie-catalog-backend-api.herokuapp.com/graphql\r\n\r\nconst prod = {\r\n  url: {\r\n    API_URL: \"https://movie-catalog-backend-api.herokuapp.com/graphql\",\r\n    // API_URL_USERS: \"https://myapp.herokuapp.com/users\",\r\n  },\r\n};\r\nconst dev = {\r\n  url: {\r\n    API_URL: \"http://localhost:5000/graphql\",\r\n  },\r\n};\r\n\r\n// export const config = process.env.NODE_ENV === \"development\" ? dev : prod;\r\nconst config = process.env.REACT_APP_STAGE === \"production\" ? prod : dev;\r\n\r\nexport default {\r\n  // Add common config values here\r\n  //   MAX_ATTACHMENT_SIZE: 5000000,\r\n  ...config,\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { ApolloProvider } from \"@apollo/client\";\n\nimport config from \"./config\";\nconst client = new ApolloClient({\n  uri: config.url.API_URL,\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}